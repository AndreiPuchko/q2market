{
 "modules": [
  {
   "name": "_dbanken_autorun",
   "script": "const.check(\"bank_date1\", \"\u041d\u0430\u0447\u0430\u043b\u043e \u043f\u0435\u0440\u0438\u043e\u0434\u0430\", \"2024-01-01\")\r\nconst.check(\"bank_date2\", \"\u041a\u043e\u043d\u0435\u0446 \u043f\u0435\u0440\u0438\u043e\u0434\u0430\", \"2024-12-31\")",
   "comment": "",
   "last_line": "2",
   "q2_time": "20240807121215",
   "q2_mode": "u"
  },
  {
   "name": "_dbanken_finder",
   "script": "if locals().get(\"bank_extender\"):\r\n    del bank_extender\r\nrun_module(\"_bank_extender\", import_only=True)\r\nif not (locals().get(\"bank_extender\") and callable(locals().get(\"bank_extender\"))):\r\n    def bank_extender(row):\r\n        pass\r\n        \r\nreturn bank_extender",
   "comment": "",
   "last_line": "3",
   "q2_time": "20240807202411",
   "q2_mode": "u"
  },
  {
   "name": "_dbanken_loader",
   "script": "import _dbanken_finder\r\n\r\nclass Konto_loader():\r\n    def __init__(self, date1, date2, konto_id):\r\n        self.date1=date1\r\n        self.date2=date2\r\n        self.konto_id = int_(konto_id)\r\n        self.algo = int_(get(\"konten\",  f\"konto_id={konto_id}\", \"algo\"))\r\n        self.algo_name = get(\"konten\",  f\"konto_id={konto_id}\", \"name\")\r\n\r\n    def run(self):\r\n        ext = \"*.csv\"\r\n        # downloads_path = os.path.expanduser(\"~/Downloads\")\r\n        downloads_path = \"\"\r\n        # self.filename = q2_app.get_open_file_dialoq(\"Open CSV\", downloads_path, ext)[0]\r\n        self.filename = q2_app.get_open_file_dialoq(f\"Open CSV ({self.algo_name})\", downloads_path, ext)[0]\r\n        if not self.filename:\r\n            return\r\n        rez = None\r\n        if self.algo == 1:\r\n            rez = self.algo_1()\r\n        elif self.algo == 2:\r\n            rez = self.algo_2()\r\n        elif self.algo == 3:\r\n            rez = self.algo_3()\r\n        elif self.algo == 4:\r\n            rez = self.algo_4()\r\n        elif self.algo == 5:\r\n            rez = self.algo_5()\r\n        elif self.algo == 6:\r\n            rez = self.algo_6()\r\n        elif self.algo == 7:\r\n            rez = self.algo_7()\r\n        elif self.algo == 8:\r\n            rez = self.algo_8()\r\n\r\n        if rez:\r\n            self.insert_bank(rez)\r\n            return True\r\n        return None\r\n\r\n    def insert_bank(self, bank_data):\r\n        bank_data = [row for row in bank_data if row[\"date\"] >= self.date1 or row[\"date\"] <= self.date2]\r\n        if len(bank_data) == 0:\r\n            return\r\n        # schon_da = q2cursor(f\"select * from bank where date>='{self.date1}' and date<='{self.date2}' and konto_id={self.konto_id}\").row_count()\r\n        q2cursor(f\"delete from kontobewegung where date>='{self.date1}' and date<='{self.date2}' and konto_id={self.konto_id}\")\r\n        \r\n        w = q2_wait(len(bank_data), \"Inserting rows\")\r\n        transaction()\r\n        for x in bank_data:\r\n            w.step(10)\r\n            if num(x.get(\"betrag\", 0)) == 0:\r\n                continue\r\n            # if not x.get(\"rechnung\"):\r\n                # x[\"rechnung\"] = self.get_recnung(x[\"content2\"])\r\n            bank_extender(x)\r\n            if not insert(\"kontobewegung\", x):\r\n                q2mess(f\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u043f\u0438\u0441\u0438 \u0434\u0432\u0438\u0436\u0435\u043d\u0438\u044f: last_error()\")\r\n                ?last_error()\r\n                break\r\n        commit()\r\n        w.close()\r\n\r\n    def get_recnung(self, text):\r\n        mm=[]\r\n        mm.append(\"rechnungsnummer\")\r\n        mm.append(\"auftragsnummer:\")\r\n        mm.append(\"belegnummer\" )\r\n        mm.append(\" re.\")\r\n        mm.append(\" beleg:\" )\r\n        mm.append(\"vat nr\")\r\n        mm.append(\"invoice no.\")\r\n        mm.append(\"invoice no\")\r\n        mm.append(\"invoice nr.\")\r\n        mm.append(\"invoice\")\r\n        mm.append(\"inv.\")\r\n        mm.append(\"dok nr\")\r\n        mm.append(\"re.-nr.\")\r\n        mm.append(\" r.\")\r\n        mm.append(\"abschlagsrechnung\")\r\n        mm.append(\"rechn nr.\")\r\n        mm.append(\"baltas naktis sia\")\r\n        mm.append(\"beatus sia\")\r\n        mm.append(\"inv. no.\")\r\n        mm.append(\"auftragsnummer:\")\r\n        mm.append(\"faktuurnummer\")\r\n        mm.append(\"inv/\")\r\n        mm.append(\"inv\")\r\n        mm.append(\"proforma-rechnung\")\r\n        mm.append(\"auftrag \")\r\n        mm.append(\"nummer\")\r\n        mm.append(\"pagal:\")\r\n        mm.append(\"rnr\")\r\n        # mm.append(\"rg\")   #\" VOM \"\r\n        mm.append(\" gutschrift\")\r\n        mm.append(\"rechnung\")\r\n        mm.append(\"01 re\")\r\n        mm.append(\" oc202\")\r\n        mm.append(\" 2024\")\r\n        mm.append(\" 2025\")\r\n        mm.append(\" 2026\")\r\n        res = \"\"\r\n        for x in mm:\r\n            tmp = text.lower().split(x)\r\n            if len(tmp) > 1:\r\n                if x in [\" oc202\",\" 2024\",\" 2025\",\" 2026\"]:\r\n                    return x.upper().strip() + tmp[1].strip().split(\" \")[0].upper().replace(\",\",\"\")\r\n                else:\r\n                    return tmp[1].strip().split(\" \")[0].upper().replace(\",\",\"\")\r\n        return \"\"\r\n    \r\n\r\n    def open_csv(self, codepage=\"utf8\", key_string=None, delimiter=\",\", callback=None, quotechar='\"'):\r\n        import csv\r\n        try:\r\n            with open(self.filename, encoding=codepage) as csvfile:\r\n                first_line=csvfile.readline()\r\n                if callback is not None:\r\n                    first_line, key_string = callback(first_line, key_string)\r\n                if  key_string not in first_line:\r\n                    q2mess(f\"\"\"<font color=red>Falche Datei </font>\r\n                            <br><b>{self.filename}</b>\r\n                            <br>(nicht <b>{self.algo_name}</b>)\r\n                            <br>kein \"{key_string}\"\r\n                            <br>\r\n                            <br> in der ersten linie\r\n                            <br>\r\n                            <br>{first_line}\"\"\")\r\n                    return []\r\n                csvfile.seek(0, 0)\r\n                reader = csv.reader(csvfile, delimiter=delimiter, quotechar=quotechar)\r\n                return [x for x in reader]\r\n        except Exception as error:\r\n            q2mess(f\"Fehler: {error}\")\r\n            return []\r\n    \r\n\r\n    def algo_1(self): # Sparkasse\r\n        from datetime import datetime\r\n        def prep_first_line(first_line, key_string):\r\n            key_string = key_string.replace('\"', \"\")\r\n            first_line = first_line.replace('\"', \"\")\r\n            return first_line, key_string\r\n        \r\n        rez =self.open_csv(codepage=\"cp1252\"\r\n                        , key_string='\"Auftragskonto\";\"Buchungstag\";\"Valutadatum\";\"Buchungstext\";\"Verwendungszweck\";\"Glaeubiger ID\";\"Mandatsreferenz\";\"Kundenreferenz (End-to-End)\"'\r\n                        , delimiter=\";\"\r\n                        ,callback=prep_first_line\r\n                        ,quotechar=\"~\")\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            if len(x) < 15:\r\n                continue\r\n            for index, value in enumerate(x):\r\n                x[index] = x[index].replace('\"', '')\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id ,\r\n                    \"date\":  datetime.strptime(x[1].split(\" \")[0], \"%d.%m.%y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[3],\r\n                    \"content2\": x[4],\r\n                    \"content3\": x[11],\r\n                    \"betrag\": x[14].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n    \r\n    def algo_2(self):  # Postbank\r\n        from datetime import datetime\r\n        rez =self.open_csv(codepage=\"utf8\"\r\n                        , key_string='Ums\u00e4tze'\r\n                        , delimiter=\";\")\r\n        rez0=[]\r\n        for x in rez[8:-1]:\r\n            if len(x) < 12:\r\n                continue\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id ,\r\n                    \"date\":  datetime.strptime(x[0].split(\" \")[0], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[2],\r\n                    \"content2\": x[3],\r\n                    \"content3\": x[4],\r\n                    \"betrag\": x[11].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n\r\n    def algo_3(self):  # ING\r\n        from datetime import datetime\r\n        rez =self.open_csv(codepage=\"cp1252\"\r\n                        , key_string='Umsatzanzeige;Datei erstellt'\r\n                        , delimiter=\";\")\r\n        rez0=[]\r\n\r\n        for x in rez[13:]:\r\n            if len(x) < 6:\r\n                continue\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id,\r\n                    \"date\":  datetime.strptime(x[0], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[2]+ \" \" + x[4],\r\n                    \"content2\": x[3],\r\n                    \"content3\": x[2],\r\n                    \"betrag\": x[5].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n\r\n    def algo_4(self): # PayPal\r\n        from datetime import datetime\r\n        rez =self.open_csv(codepage=\"utf8\"\r\n                        # , key_string='\"Datum\",\"Uhrzeit\",\"Zeitzone\",\"Name\",\"Typ\",\"Status\",\"W\u00e4hrung\",\"Brutto\",\"Geb\u00fchr\"'\r\n                        , key_string='\"Datum\",\"Uhrzeit\",\"Zeitzone\",\"Beschreibung\",\"W\u00e4hrung\",\"Brutto\",\"Entgelt\",'\r\n                        , delimiter=\",\")\r\n        rez0=[]\r\n        gebuhr = 0\r\n        for x in rez[1:]:\r\n            if len(x) < 9:\r\n                continue\r\n            if x[5] == \"Ausstehend\":\r\n                continue\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id,\r\n                    \"date\":  datetime.strptime(x[0], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[11] ,\r\n                    \"content2\": x[10] + \" \" + x[4],\r\n                    \"content3\": x[3],\r\n                    \"rechnung\": x[16] if len(x[16]) < 16 else \"\",\r\n                    \"betrag\": x[5].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    }\r\n            rez0.append(dct)\r\n            gebuhr += num(x[6].replace(\".\", \"\").replace(\",\", \".\"))\r\n        if gebuhr !=0:\r\n            dct0 = dict(dct)\r\n            dct0['betrag'] = str(gebuhr)\r\n            dct0['content1'] = \"Entgelt\"\r\n            dct0['content2'] = \"\"\r\n            dct0['content3'] = \"\"\r\n            dct0['rechnung'] = \"\"\r\n            rez0.append(dct0)\r\n        return rez0\r\n\r\n    def algo_5(self): # Kommerz\r\n        from datetime import datetime\r\n        rez =self.open_csv(codepage=\"utf8\"\r\n                        , key_string='Buchungstag;Wertstellung;Umsatzart;Buchungstext;Betrag;W\u00e4hrung'\r\n                        , delimiter=\";\")\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            if len(x) < 5:\r\n                continue\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id,\r\n                    \"date\":  datetime.strptime(x[0], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[2],\r\n                    \"content2\": x[3],\r\n                    \"content3\": \"\",\r\n                    \"betrag\": x[4].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n\r\n    def algo_6(self): # Finom\r\n        from datetime import datetime\r\n        rez =self.open_csv(codepage=\"utf8\"\r\n                        , key_string='Buchungsdatum,Time completed,Status,Transaktionsart,Auftraggeber/Empf\u00e4nger,Counterparty BIC'\r\n                        , delimiter=\",\")\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            if len(x) < 13:\r\n                continue\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id,\r\n                    \"date\":  datetime.strptime(x[0], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[4],\r\n                    \"content2\": x[7],\r\n                    \"content3\": \"\",\r\n                    \"betrag\": x[12].replace(\",\", \"\"),\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n\r\n    def algo_7(self): # HypoVereinsbank\r\n        from datetime import datetime\r\n        rez =self.open_csv(codepage=\"utf-16-le\"\r\n                        , key_string='Kontonummer;Buchungsdatum;Valuta;Empfaenger 1;Empfaenger 2;Verwendungszweck;Betrag;Waehrung'\r\n                        , delimiter=\";\")\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            if len(x) < 7:\r\n                continue\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id,\r\n                    \"date\":  datetime.strptime(x[1], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\":  \"\",\r\n                    \"content2\": x[5],\r\n                    \"content3\": \"\",\r\n                    \"betrag\": x[6].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n    def algo_8(self): # Qonto\r\n        from datetime import datetime\r\n        rez =self.open_csv(codepage=\"utf8\"\r\n                        # , key_string='\"Datum\",\"Uhrzeit\",\"Zeitzone\",\"Name\",\"Typ\",\"Status\",\"W\u00e4hrung\",\"Brutto\",\"Geb\u00fchr\"'\r\n                        , key_string='Abrechnungstag (UTC);Name der Gegenpartei;Gesamtbetrag (inkl. MwSt.)'\r\n                        , delimiter=\";\")\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id,\r\n                    \"date\":  datetime.strptime(x[0][:10], \"%d-%m-%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[1] ,\r\n                    \"content2\": \"\",\r\n                    \"content3\": \"\",\r\n                    \"betrag\": x[2].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n        \r\nif __name__ == \"__main__\":\r\n    q2mess(12)",
   "comment": "",
   "last_line": "48",
   "q2_time": "20240807205730",
   "q2_mode": "u"
  }
 ],
 "forms": [
  {
   "name": "_dbanken_konten",
   "title": "\u0421\u0447\u0435\u0442\u0430",
   "seq": "17",
   "menu_path": "\u0411\u0430\u043d\u043a",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "konten",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240806214319",
   "q2_mode": "i"
  },
  {
   "name": "_dbanken_kontobewegung",
   "title": "\u0414\u0432\u0438\u0436\u0435\u043d\u0438\u0435 \u043f\u043e \u0441\u0447\u0435\u0442\u0443",
   "seq": "18",
   "menu_path": "",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "kontobewegung",
   "form_table_sort": "date",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240807204506",
   "q2_mode": "u"
  },
  {
   "name": "_dbanken_settings",
   "title": "\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0431\u0430\u043d\u043a\u0430",
   "seq": "19",
   "menu_path": "\u0411\u0430\u043d\u043a",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "*",
   "toolbar": "",
   "ok_button": "*",
   "cancel_button": "*",
   "view_action": "",
   "form_table": "",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "for x in mem.controls:\r\n    column = x[\"column\"]\r\n    if column:\r\n        mem.s.__setattr__(column, const.__getattr__(column))",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "for x in mem.controls:\r\n    column = x[\"column\"]\r\n    if column:\r\n        const.__setattr__(column, mem.s.__getattr__(column))",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240807155846",
   "q2_mode": "u"
  }
 ],
 "lines": [
  {
   "id": "595",
   "column": "konto_id",
   "label": "\u041a\u043e\u0434",
   "gridlabel": "",
   "mess": "",
   "seq": "0",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "alignment": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "*",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "name": "_dbanken_konten",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "style": "",
   "q2_time": "20240806215312",
   "q2_mode": "u"
  },
  {
   "id": "596",
   "column": "name",
   "label": "\u041d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435",
   "gridlabel": "",
   "mess": "",
   "seq": "1",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "alignment": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "100",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "name": "_dbanken_konten",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "style": "",
   "q2_time": "20240806214413",
   "q2_mode": "i"
  },
  {
   "id": "597",
   "column": "saldo",
   "label": "\u041d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0439 \u043e\u0441\u0442\u0430\u0442\u043e\u043a",
   "gridlabel": "",
   "mess": "",
   "seq": "2",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "alignment": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "dec",
   "datalen": "15",
   "datadec": "2",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "name": "_dbanken_konten",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "style": "",
   "q2_time": "20240806215302",
   "q2_mode": "u"
  },
  {
   "id": "598",
   "column": "algo",
   "label": "\u0411\u0430\u043d\u043a",
   "gridlabel": "",
   "mess": "",
   "seq": "3",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "alignment": "0",
   "tag": "",
   "control": "radio",
   "pic": "Sparkasse;Postbank;ING;PayPal;Commerzbank;Finom;HypoVereinsbank;Qonto",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "name": "_dbanken_konten",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "style": "",
   "q2_time": "20240807122955",
   "q2_mode": "u"
  },
  {
   "id": "599",
   "column": "id",
   "label": "",
   "gridlabel": "",
   "mess": "",
   "seq": "0",
   "nogrid": "*",
   "noform": "*",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "alignment": "0",
   "tag": "",
   "control": "",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "*",
   "ai": "*",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "name": "_dbanken_kontobewegung",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "style": "",
   "q2_time": "20240806215937",
   "q2_mode": "i"
  },
  {
   "id": "601",
   "column": "konto_id",
   "label": "Konto",
   "gridlabel": "",
   "mess": "",
   "seq": "2",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "alignment": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "konten",
   "to_column": "konto_id",
   "related": "name",
   "to_form": "_dbanken_konten",
   "name": "_dbanken_kontobewegung",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "style": "",
   "q2_time": "20240806220213",
   "q2_mode": "u"
  },
  {
   "id": "602",
   "column": "date",
   "label": "Buchungstag",
   "gridlabel": "",
   "mess": "",
   "seq": "3",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "alignment": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "date",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "name": "_dbanken_kontobewegung",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "style": "",
   "q2_time": "20240806215955",
   "q2_mode": "i"
  },
  {
   "id": "603",
   "column": "betrag",
   "label": "Betrag",
   "gridlabel": "",
   "mess": "",
   "seq": "4",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "alignment": "0",
   "tag": "",
   "control": "line",
   "pic": "F",
   "datatype": "dec",
   "datalen": "15",
   "datadec": "2",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "name": "_dbanken_kontobewegung",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "style": "",
   "q2_time": "20240806215955",
   "q2_mode": "i"
  },
  {
   "id": "606",
   "column": "content1",
   "label": "Buchungstext",
   "gridlabel": "",
   "mess": "",
   "seq": "9",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "88",
   "alignment": "0",
   "tag": "",
   "control": "text",
   "pic": "",
   "datatype": "char",
   "datalen": "250",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "name": "_dbanken_kontobewegung",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "style": "",
   "q2_time": "20240806215955",
   "q2_mode": "i"
  },
  {
   "id": "607",
   "column": "content2",
   "label": "Verwendungszweck",
   "gridlabel": "",
   "mess": "",
   "seq": "10",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "2",
   "alignment": "0",
   "tag": "",
   "control": "text",
   "pic": "",
   "datatype": "char",
   "datalen": "250",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "name": "_dbanken_kontobewegung",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "style": "",
   "q2_time": "20240806215955",
   "q2_mode": "i"
  },
  {
   "id": "608",
   "column": "content3",
   "label": "An wen/Von wem",
   "gridlabel": "",
   "mess": "",
   "seq": "11",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "1",
   "alignment": "0",
   "tag": "",
   "control": "text",
   "pic": "",
   "datatype": "char",
   "datalen": "250",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "name": "_dbanken_kontobewegung",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "style": "",
   "q2_time": "20240806215955",
   "q2_mode": "i"
  },
  {
   "id": "610",
   "column": "",
   "label": "\u0420\u0430\u0431\u043e\u0447\u0438\u0439 \u043f\u0435\u0440\u0438\u043e\u0434",
   "gridlabel": "",
   "mess": "",
   "seq": "1",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "alignment": "0",
   "tag": "",
   "control": "label",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "name": "_dbanken_settings",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "style": "",
   "q2_time": "20240807155809",
   "q2_mode": "u"
  },
  {
   "id": "611",
   "column": "bank_date1",
   "label": "ab",
   "gridlabel": "",
   "mess": "",
   "seq": "2",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "alignment": "0",
   "tag": "",
   "control": "label",
   "pic": "",
   "datatype": "date",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "name": "_dbanken_settings",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "style": "",
   "q2_time": "20240807155748",
   "q2_mode": "u"
  },
  {
   "id": "612",
   "column": "bank_date2",
   "label": "bis",
   "gridlabel": "",
   "mess": "",
   "seq": "3",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "alignment": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "date",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "name": "_dbanken_settings",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "style": "",
   "q2_time": "20240807155754",
   "q2_mode": "u"
  }
 ],
 "queries": [],
 "actions": [
  {
   "id": "125",
   "action_text": "",
   "seq": "0",
   "action_mode": "1",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "0",
   "name": "_dbanken_konten",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240806214324",
   "q2_mode": "i"
  },
  {
   "id": "127",
   "action_text": "\u0414\u0432\u0438\u0436\u0435\u043d\u0438\u0435",
   "seq": "1",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "F2",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "_dbanken_kontobewegung",
   "child_where": "konto_id={konto_id}",
   "child_noshow": "",
   "child_copy_mode": "1",
   "name": "_dbanken_konten",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240806220315",
   "q2_mode": "i"
  },
  {
   "id": "128",
   "action_text": "\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c",
   "seq": "2",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "F3",
   "tag": "yellow",
   "eof_disabled": "*",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "name": "_dbanken_konten",
   "action_worker": "import _dbanken_loader\r\n\r\nform_loader = Q2Form(\"\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0434\u0432\u0438\u0436\u0435\u043d\u0438\u044f \u043f\u043e \u0441\u0447\u0435\u0442\u0443\")\r\nform_loader.add_control(\"date1\", \"From\", datatype=\"date\", data = const.bank_date1)\r\nform_loader.add_control(\"date2\", \"to\", datatype=\"date\", data = const.bank_date2)\r\nform_loader.ok_button =1\r\nform_loader.cancel_button =1\r\n\r\nform_loader.run()\r\n\r\nif form_loader.ok_pressed:\r\n    date1 = form_loader.s.date1\r\n    date2 = form_loader.s.date2\r\n    if Konto_loader(date1,date2,form.r.konto_id).run():\r\n        mem.refresh()",
   "comment": "",
   "q2_time": "20240808180404",
   "q2_mode": "u"
  },
  {
   "id": "129",
   "action_text": "\u0418\u0442\u043e\u0433\u0438 \u043f\u043e \u0434\u043d\u044f\u043c",
   "seq": "3",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "name": "_dbanken_konten",
   "action_worker": "cu=q2cursor(f\"\"\"\r\n                    select date\r\n                        , (select saldo from konten where konto_id={mem.r.konto_id}) +saldo as saldo\r\n                        , (select round(sum(case when betrag>0 then betrag else 0 end ),2)\r\n                            from kontobewegung\r\n                            where konto_id = {mem.r.konto_id} and date=qq.date\r\n                            )  as ein\r\n                        , (select round(sum(case when betrag<0 then -betrag else 0 end ),2)\r\n                            from kontobewegung\r\n                            where konto_id = {mem.r.konto_id} and date=qq.date\r\n                            )  as aus\r\n                    from\r\n                        (\r\n                        SELECT date, \r\n                               round(   SUM(betrag) OVER (order BY date)    ,2) AS saldo\r\n                        FROM kontobewegung\r\n                        where konto_id = {mem.r.konto_id}\r\n                        ORDER BY date\r\n                        ) qq\r\n                    where date >='{const.bank_date1}' and date <='{const.bank_date2}'\r\n                    group by date\r\n                    \r\n\"\"\")\r\n\r\nform=Q2Form(\"\u0418\u0442\u043e\u0433\u0438 \u043f\u043e \u0434\u043d\u044f\u043c\")\r\nform.add_control(\"date\", \"\u0414\u0430\u0442\u0430\", datatype=\"date\", datalen=12)\r\nform.add_control(\"ein\", \"\u041f\u0440\u0438\u0445\u043e\u0434\", datatype=\"dec\", datalen=15, datadec=2, pic=\"F\")\r\nform.add_control(\"aus\", \"\u0420\u0430\u0441\u0445\u043e\u0434\", datatype=\"dec\", datalen=15, datadec=2, pic=\"F\")\r\nform.add_control(\"saldo\", \"\u041e\u0441\u0442\u0430\u0442\u043e\u043a \u043d\u0430 \u043a\u043e\u043d\u0435\u0446\", datatype=\"dec\", datalen=15, datadec=2, pic=\"F\")\r\nform.set_model(Q2CursorModel(cu))\r\nform.run()",
   "comment": "",
   "q2_time": "20240808180150",
   "q2_mode": "u"
  },
  {
   "id": "126",
   "action_text": "",
   "seq": "0",
   "action_mode": "1",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "0",
   "name": "_dbanken_kontobewegung",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240806215937",
   "q2_mode": "i"
  }
 ],
 "reports": [],
 "packages": [
  {
   "package_name": "q2googledrive",
   "package_pipname": "",
   "package_version": "",
   "comment": "",
   "q2_time": "20240731214835",
   "q2_mode": "i"
  }
 ]
}