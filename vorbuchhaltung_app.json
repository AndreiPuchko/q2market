{
 "modules": [
  {
   "name": "_test_commerz",
   "script": "path = r\"C:\\Users\\andre\\Desktop\\Lehrmann GmbH\\Sales\\plentyMarkets_AccountBook_2024-1.csv\"\r\n\r\ndef open_csv(filename,  codepage=\"utf8\", delimiter=\",\"):\r\n    import csv\r\n    try:\r\n        with open(filename, encoding=codepage) as csvfile:\r\n            reader = csv.reader(csvfile, delimiter=delimiter)\r\n            return [x for x in reader]\r\n    except Exception as error:\r\n        q2mess(f\"Fehler: {error}\")\r\n        return []\r\n\r\n\r\nfrom datetime import datetime\r\n\r\n\r\n\r\nrez = open_csv(path, delimiter=\";\")\r\nrez0=[]\r\n\r\nfor x in rez[1:3]:\r\n    if x == []:\r\n        continue\r\n    dct={ \r\n            \"shop_id\":  1 ,\r\n            \"date\":   datetime.strptime(x[11][:10], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\"),\r\n            \"content1\": x[14],\r\n            \"betrag\": str(num(x[15].replace(\",\", \".\"))),\r\n            \"kosten\": 0,\r\n            \"mwst\": 0,\r\n            \"land\": x[8]\r\n            }\r\n    rez0.append(dct)\r\n\r\n\r\nq2mess(rez0)",
   "comment": "",
   "last_line": "24",
   "q2_time": "20240307220935",
   "q2_mode": "i"
  },
  {
   "name": "_test_cursor",
   "script": "cu=q2cursor(\"select * from bank\")\r\ncu.browse()\r\nform=Q2Form()\r\nform.add_control(\"date\", \"Datum\", datatype=\"date\")\r\nform.set_model(Q2CursorModel(cu))\r\nform.run()",
   "comment": "",
   "last_line": "6",
   "q2_time": "20240307220935",
   "q2_mode": "i"
  },
  {
   "name": "autorun",
   "script": "# run_form(\"bank_af\")\r\n# const.ipath=\"C:\\\\Users\\\\andre\\\\My Drive\\\\Ing\"\r\n# Q2Lines().run()\r\nconst.check(\"date1\", \"Beginn der Arbeitsperiode\", \"2024-01-01\")\r\nconst.check(\"date2\", \"Ende der Arbeitsperiode\", \"2024-01-31\")\r\n# run_form(\"sales\")\r\n# self.run_reports()\r\n# self.run_app_manager()\r\n\r\n\r\nif myapp.db_data.table(\"banken\").row_count() <=0:\r\n    insert(\"banken\", {\"name\": \"-\"})\r\n    insert(\"banken\", {\"name\": \"Sparkasse\", \"algo\": 1})\r\n    insert(\"banken\", {\"name\": \"Postbank\", \"algo\": 2})\r\n    insert(\"banken\", {\"name\": \"ING\", \"algo\": 3})\r\n    insert(\"banken\", {\"name\": \"PayPal\", \"algo\": 4})\r\n    insert(\"banken\", {\"name\": \"Commerzbank\", \"algo\": 5})\r\n    insert(\"banken\", {\"name\": \"Finom\", \"algo\": 6})\r\n    insert(\"banken\", {\"name\": \"HypoVereinsbank\", \"algo\": 7})\r\n    \r\nif myapp.db_data.table(\"plattformen\").row_count() <=0:\r\n    insert(\"plattformen\", {\"name\": \"-\"})\r\n    insert(\"plattformen\", {\"name\": \"Amazon\", \"algo\": 1})\r\n    insert(\"plattformen\", {\"name\": \"eBay\", \"algo\": 2})\r\n    insert(\"plattformen\", {\"name\": \"Etsy\", \"algo\": 3})\r\n    insert(\"plattformen\", {\"name\": \"Shopify\", \"algo\": 4})\r\n    insert(\"plattformen\", {\"name\": \"Easybill\", \"algo\": 5})\r\n    \r\nif myapp.db_data.table(\"konten\").row_count() <=0:\r\n    insert(\"konten\", {\"konto_name\": \"-\", \"bk\":0})\r\n    \r\nif myapp.db_data.table(\"shops\").row_count() <=0:\r\n    insert(\"shops\", {\"name\": \"-\", \"pl\": 0})\r\n    \r\nif myapp.db_data.table(\"country\").row_count() <=0:\r\n    insert(\"country\", {\"a2\":\"-\", \"name\": \"-\", \"pl\": 0})\r\n    insert('country', {'a2':'AF', 'a3':'AFG', 'name':'Afghanistan'})\r\n    insert('country', {'a2':'AX', 'a3':'ALA', 'name':'\u00c5land Islands'})\r\n    insert('country', {'a2':'AL', 'a3':'ALB', 'name':'Albania'})\r\n    insert('country', {'a2':'DZ', 'a3':'DZA', 'name':'Algeria'})\r\n    insert('country', {'a2':'AS', 'a3':'ASM', 'name':'American Samoa'})\r\n    insert('country', {'a2':'AD', 'a3':'AND', 'name':'Andorra'})\r\n    insert('country', {'a2':'AO', 'a3':'AGO', 'name':'Angola'})\r\n    insert('country', {'a2':'AI', 'a3':'AIA', 'name':'Anguilla'})\r\n    insert('country', {'a2':'AQ', 'a3':'ATA', 'name':'Antarctica'})\r\n    insert('country', {'a2':'AG', 'a3':'ATG', 'name':'Antigua and Barbuda'})\r\n    insert('country', {'a2':'AR', 'a3':'ARG', 'name':'Argentina'})\r\n    insert('country', {'a2':'AM', 'a3':'ARM', 'name':'Armenia'})\r\n    insert('country', {'a2':'AW', 'a3':'ABW', 'name':'Aruba'})\r\n    insert('country', {'a2':'AU', 'a3':'AUS', 'name':'Australia'})\r\n    insert('country', {'a2':'AT', 'a3':'AUT', 'name':'Austria'})\r\n    insert('country', {'a2':'AZ', 'a3':'AZE', 'name':'Azerbaijan'})\r\n    insert('country', {'a2':'BS', 'a3':'BHS', 'name':'Bahamas'})\r\n    insert('country', {'a2':'BH', 'a3':'BHR', 'name':'Bahrain'})\r\n    insert('country', {'a2':'BD', 'a3':'BGD', 'name':'Bangladesh'})\r\n    insert('country', {'a2':'BB', 'a3':'BRB', 'name':'Barbados'})\r\n    insert('country', {'a2':'BY', 'a3':'BLR', 'name':'Belarus'})\r\n    insert('country', {'a2':'BE', 'a3':'BEL', 'name':'Belgium'})\r\n    insert('country', {'a2':'BZ', 'a3':'BLZ', 'name':'Belize'})\r\n    insert('country', {'a2':'BJ', 'a3':'BEN', 'name':'Benin'})\r\n    insert('country', {'a2':'BM', 'a3':'BMU', 'name':'Bermuda'})\r\n    insert('country', {'a2':'BT', 'a3':'BTN', 'name':'Bhutan'})\r\n    insert('country', {'a2':'BO', 'a3':'BOL', 'name':'Bolivia (Plurinational State of)'})\r\n    insert('country', {'a2':'BQ', 'a3':'BES', 'name':'Bonaire, Sint Eustatius and Saba'})\r\n    insert('country', {'a2':'BA', 'a3':'BIH', 'name':'Bosnia and Herzegovina'})\r\n    insert('country', {'a2':'BW', 'a3':'BWA', 'name':'Botswana'})\r\n    insert('country', {'a2':'BV', 'a3':'BVT', 'name':'Bouvet Island'})\r\n    insert('country', {'a2':'BR', 'a3':'BRA', 'name':'Brazil'})\r\n    insert('country', {'a2':'IO', 'a3':'IOT', 'name':'British Indian Ocean Territory'})\r\n    insert('country', {'a2':'BN', 'a3':'BRN', 'name':'Brunei Darussalam'})\r\n    insert('country', {'a2':'BG', 'a3':'BGR', 'name':'Bulgaria'})\r\n    insert('country', {'a2':'BF', 'a3':'BFA', 'name':'Burkina Faso'})\r\n    insert('country', {'a2':'BI', 'a3':'BDI', 'name':'Burundi'})\r\n    insert('country', {'a2':'CV', 'a3':'CPV', 'name':'Cabo Verde'})\r\n    insert('country', {'a2':'KH', 'a3':'KHM', 'name':'Cambodia'})\r\n    insert('country', {'a2':'CM', 'a3':'CMR', 'name':'Cameroon'})\r\n    insert('country', {'a2':'CA', 'a3':'CAN', 'name':'Canada'})\r\n    insert('country', {'a2':'KY', 'a3':'CYM', 'name':'Cayman Islands'})\r\n    insert('country', {'a2':'CF', 'a3':'CAF', 'name':'Central African Republic'})\r\n    insert('country', {'a2':'TD', 'a3':'TCD', 'name':'Chad'})\r\n    insert('country', {'a2':'CL', 'a3':'CHL', 'name':'Chile'})\r\n    insert('country', {'a2':'CN', 'a3':'CHN', 'name':'China'})\r\n    insert('country', {'a2':'CX', 'a3':'CXR', 'name':'Christmas Island'})\r\n    insert('country', {'a2':'CC', 'a3':'CCK', 'name':'Cocos (Keeling) Islands'})\r\n    insert('country', {'a2':'CO', 'a3':'COL', 'name':'Colombia'})\r\n    insert('country', {'a2':'KM', 'a3':'COM', 'name':'Comoros'})\r\n    insert('country', {'a2':'CG', 'a3':'COG', 'name':'Congo'})\r\n    insert('country', {'a2':'CD', 'a3':'COD', 'name':'Congo, Democratic Republic of the'})\r\n    insert('country', {'a2':'CK', 'a3':'COK', 'name':'Cook Islands'})\r\n    insert('country', {'a2':'CR', 'a3':'CRI', 'name':'Costa Rica'})\r\n    insert('country', {'a2':'CI', 'a3':'CIV', 'name':'C\u00f4te d''Ivoire'})\r\n    insert('country', {'a2':'HR', 'a3':'HRV', 'name':'Croatia'})\r\n    insert('country', {'a2':'CU', 'a3':'CUB', 'name':'Cuba'})\r\n    insert('country', {'a2':'CW', 'a3':'CUW', 'name':'Cura\u00e7ao'})\r\n    insert('country', {'a2':'CY', 'a3':'CYP', 'name':'Cyprus'})\r\n    insert('country', {'a2':'CZ', 'a3':'CZE', 'name':'Czechia'})\r\n    insert('country', {'a2':'DK', 'a3':'DNK', 'name':'Denmark'})\r\n    insert('country', {'a2':'DJ', 'a3':'DJI', 'name':'Djibouti'})\r\n    insert('country', {'a2':'DM', 'a3':'DMA', 'name':'Dominica'})\r\n    insert('country', {'a2':'DO', 'a3':'DOM', 'name':'Dominican Republic'})\r\n    insert('country', {'a2':'EC', 'a3':'ECU', 'name':'Ecuador'})\r\n    insert('country', {'a2':'EG', 'a3':'EGY', 'name':'Egypt'})\r\n    insert('country', {'a2':'SV', 'a3':'SLV', 'name':'El Salvador'})\r\n    insert('country', {'a2':'GQ', 'a3':'GNQ', 'name':'Equatorial Guinea'})\r\n    insert('country', {'a2':'ER', 'a3':'ERI', 'name':'Eritrea'})\r\n    insert('country', {'a2':'EE', 'a3':'EST', 'name':'Estonia'})\r\n    insert('country', {'a2':'SZ', 'a3':'SWZ', 'name':'Eswatini'})\r\n    insert('country', {'a2':'ET', 'a3':'ETH', 'name':'Ethiopia'})\r\n    insert('country', {'a2':'FK', 'a3':'FLK', 'name':'Falkland Islands (Malvinas)'})\r\n    insert('country', {'a2':'FO', 'a3':'FRO', 'name':'Faroe Islands'})\r\n    insert('country', {'a2':'FJ', 'a3':'FJI', 'name':'Fiji'})\r\n    insert('country', {'a2':'FI', 'a3':'FIN', 'name':'Finland'})\r\n    insert('country', {'a2':'FR', 'a3':'FRA', 'name':'France'})\r\n    insert('country', {'a2':'GF', 'a3':'GUF', 'name':'French Guiana'})\r\n    insert('country', {'a2':'PF', 'a3':'PYF', 'name':'French Polynesia'})\r\n    insert('country', {'a2':'TF', 'a3':'ATF', 'name':'French Southern Territories'})\r\n    insert('country', {'a2':'GA', 'a3':'GAB', 'name':'Gabon'})\r\n    insert('country', {'a2':'GM', 'a3':'GMB', 'name':'Gambia'})\r\n    insert('country', {'a2':'GE', 'a3':'GEO', 'name':'Georgia'})\r\n    insert('country', {'a2':'DE', 'a3':'DEU', 'name':'Germany'})\r\n    insert('country', {'a2':'GH', 'a3':'GHA', 'name':'Ghana'})\r\n    insert('country', {'a2':'GI', 'a3':'GIB', 'name':'Gibraltar'})\r\n    insert('country', {'a2':'GR', 'a3':'GRC', 'name':'Greece'})\r\n    insert('country', {'a2':'GL', 'a3':'GRL', 'name':'Greenland'})\r\n    insert('country', {'a2':'GD', 'a3':'GRD', 'name':'Grenada'})\r\n    insert('country', {'a2':'GP', 'a3':'GLP', 'name':'Guadeloupe'})\r\n    insert('country', {'a2':'GU', 'a3':'GUM', 'name':'Guam'})\r\n    insert('country', {'a2':'GT', 'a3':'GTM', 'name':'Guatemala'})\r\n    insert('country', {'a2':'GG', 'a3':'GGY', 'name':'Guernsey'})\r\n    insert('country', {'a2':'GN', 'a3':'GIN', 'name':'Guinea'})\r\n    insert('country', {'a2':'GW', 'a3':'GNB', 'name':'Guinea-Bissau'})\r\n    insert('country', {'a2':'GY', 'a3':'GUY', 'name':'Guyana'})\r\n    insert('country', {'a2':'HT', 'a3':'HTI', 'name':'Haiti'})\r\n    insert('country', {'a2':'HM', 'a3':'HMD', 'name':'Heard Island and McDonald Islands'})\r\n    insert('country', {'a2':'VA', 'a3':'VAT', 'name':'Holy See'})\r\n    insert('country', {'a2':'HN', 'a3':'HND', 'name':'Honduras'})\r\n    insert('country', {'a2':'HK', 'a3':'HKG', 'name':'Hong Kong'})\r\n    insert('country', {'a2':'HU', 'a3':'HUN', 'name':'Hungary'})\r\n    insert('country', {'a2':'IS', 'a3':'ISL', 'name':'Iceland'})\r\n    insert('country', {'a2':'IN', 'a3':'IND', 'name':'India'})\r\n    insert('country', {'a2':'ID', 'a3':'IDN', 'name':'Indonesia'})\r\n    insert('country', {'a2':'IR', 'a3':'IRN', 'name':'Iran (Islamic Republic of)'})\r\n    insert('country', {'a2':'IQ', 'a3':'IRQ', 'name':'Iraq'})\r\n    insert('country', {'a2':'IE', 'a3':'IRL', 'name':'Ireland'})\r\n    insert('country', {'a2':'IM', 'a3':'IMN', 'name':'Isle of Man'})\r\n    insert('country', {'a2':'IL', 'a3':'ISR', 'name':'Israel'})\r\n    insert('country', {'a2':'IT', 'a3':'ITA', 'name':'Italy'})\r\n    insert('country', {'a2':'JM', 'a3':'JAM', 'name':'Jamaica'})\r\n    insert('country', {'a2':'JP', 'a3':'JPN', 'name':'Japan'})\r\n    insert('country', {'a2':'JE', 'a3':'JEY', 'name':'Jersey'})\r\n    insert('country', {'a2':'JO', 'a3':'JOR', 'name':'Jordan'})\r\n    insert('country', {'a2':'KZ', 'a3':'KAZ', 'name':'Kazakhstan'})\r\n    insert('country', {'a2':'KE', 'a3':'KEN', 'name':'Kenya'})\r\n    insert('country', {'a2':'KI', 'a3':'KIR', 'name':'Kiribati'})\r\n    insert('country', {'a2':'KP', 'a3':'PRK', 'name':'Korea (Democratic People''s Republic of)'})\r\n    insert('country', {'a2':'KR', 'a3':'KOR', 'name':'Korea, Republic of'})\r\n    insert('country', {'a2':'KW', 'a3':'KWT', 'name':'Kuwait'})\r\n    insert('country', {'a2':'KG', 'a3':'KGZ', 'name':'Kyrgyzstan'})\r\n    insert('country', {'a2':'LA', 'a3':'LAO', 'name':'Lao People''s Democratic Republic'})\r\n    insert('country', {'a2':'LV', 'a3':'LVA', 'name':'Latvia'})\r\n    insert('country', {'a2':'LB', 'a3':'LBN', 'name':'Lebanon'})\r\n    insert('country', {'a2':'LS', 'a3':'LSO', 'name':'Lesotho'})\r\n    insert('country', {'a2':'LR', 'a3':'LBR', 'name':'Liberia'})\r\n    insert('country', {'a2':'LY', 'a3':'LBY', 'name':'Libya'})\r\n    insert('country', {'a2':'LI', 'a3':'LIE', 'name':'Liechtenstein'})\r\n    insert('country', {'a2':'LT', 'a3':'LTU', 'name':'Lithuania'})\r\n    insert('country', {'a2':'LU', 'a3':'LUX', 'name':'Luxembourg'})\r\n    insert('country', {'a2':'MO', 'a3':'MAC', 'name':'Macao'})\r\n    insert('country', {'a2':'MG', 'a3':'MDG', 'name':'Madagascar'})\r\n    insert('country', {'a2':'MW', 'a3':'MWI', 'name':'Malawi'})\r\n    insert('country', {'a2':'MY', 'a3':'MYS', 'name':'Malaysia'})\r\n    insert('country', {'a2':'MV', 'a3':'MDV', 'name':'Maldives'})\r\n    insert('country', {'a2':'ML', 'a3':'MLI', 'name':'Mali'})\r\n    insert('country', {'a2':'MT', 'a3':'MLT', 'name':'Malta'})\r\n    insert('country', {'a2':'MH', 'a3':'MHL', 'name':'Marshall Islands'})\r\n    insert('country', {'a2':'MQ', 'a3':'MTQ', 'name':'Martinique'})\r\n    insert('country', {'a2':'MR', 'a3':'MRT', 'name':'Mauritania'})\r\n    insert('country', {'a2':'MU', 'a3':'MUS', 'name':'Mauritius'})\r\n    insert('country', {'a2':'YT', 'a3':'MYT', 'name':'Mayotte'})\r\n    insert('country', {'a2':'MX', 'a3':'MEX', 'name':'Mexico'})\r\n    insert('country', {'a2':'FM', 'a3':'FSM', 'name':'Micronesia (Federated States of)'})\r\n    insert('country', {'a2':'MD', 'a3':'MDA', 'name':'Moldova, Republic of'})\r\n    insert('country', {'a2':'MC', 'a3':'MCO', 'name':'Monaco'})\r\n    insert('country', {'a2':'MN', 'a3':'MNG', 'name':'Mongolia'})\r\n    insert('country', {'a2':'ME', 'a3':'MNE', 'name':'Montenegro'})\r\n    insert('country', {'a2':'MS', 'a3':'MSR', 'name':'Montserrat'})\r\n    insert('country', {'a2':'MA', 'a3':'MAR', 'name':'Morocco'})\r\n    insert('country', {'a2':'MZ', 'a3':'MOZ', 'name':'Mozambique'})\r\n    insert('country', {'a2':'MM', 'a3':'MMR', 'name':'Myanmar'})\r\n    insert('country', {'a2':'NA', 'a3':'NAM', 'name':'Namibia'})\r\n    insert('country', {'a2':'NR', 'a3':'NRU', 'name':'Nauru'})\r\n    insert('country', {'a2':'NP', 'a3':'NPL', 'name':'Nepal'})\r\n    insert('country', {'a2':'NL', 'a3':'NLD', 'name':'Netherlands'})\r\n    insert('country', {'a2':'NC', 'a3':'NCL', 'name':'New Caledonia'})\r\n    insert('country', {'a2':'NZ', 'a3':'NZL', 'name':'New Zealand'})\r\n    insert('country', {'a2':'NI', 'a3':'NIC', 'name':'Nicaragua'})\r\n    insert('country', {'a2':'NE', 'a3':'NER', 'name':'Niger'})\r\n    insert('country', {'a2':'NG', 'a3':'NGA', 'name':'Nigeria'})\r\n    insert('country', {'a2':'NU', 'a3':'NIU', 'name':'Niue'})\r\n    insert('country', {'a2':'NF', 'a3':'NFK', 'name':'Norfolk Island'})\r\n    insert('country', {'a2':'MK', 'a3':'MKD', 'name':'North Macedonia'})\r\n    insert('country', {'a2':'MP', 'a3':'MNP', 'name':'Northern Mariana Islands'})\r\n    insert('country', {'a2':'NO', 'a3':'NOR', 'name':'Norway'})\r\n    insert('country', {'a2':'OM', 'a3':'OMN', 'name':'Oman'})\r\n    insert('country', {'a2':'PK', 'a3':'PAK', 'name':'Pakistan'})\r\n    insert('country', {'a2':'PW', 'a3':'PLW', 'name':'Palau'})\r\n    insert('country', {'a2':'PS', 'a3':'PSE', 'name':'Palestine, State of'})\r\n    insert('country', {'a2':'PA', 'a3':'PAN', 'name':'Panama'})\r\n    insert('country', {'a2':'PG', 'a3':'PNG', 'name':'Papua New Guinea'})\r\n    insert('country', {'a2':'PY', 'a3':'PRY', 'name':'Paraguay'})\r\n    insert('country', {'a2':'PE', 'a3':'PER', 'name':'Peru'})\r\n    insert('country', {'a2':'PH', 'a3':'PHL', 'name':'Philippines'})\r\n    insert('country', {'a2':'PN', 'a3':'PCN', 'name':'Pitcairn'})\r\n    insert('country', {'a2':'PL', 'a3':'POL', 'name':'Poland'})\r\n    insert('country', {'a2':'PT', 'a3':'PRT', 'name':'Portugal'})\r\n    insert('country', {'a2':'PR', 'a3':'PRI', 'name':'Puerto Rico'})\r\n    insert('country', {'a2':'QA', 'a3':'QAT', 'name':'Qatar'})\r\n    insert('country', {'a2':'RE', 'a3':'REU', 'name':'R\u00e9union'})\r\n    insert('country', {'a2':'RO', 'a3':'ROU', 'name':'Romania'})\r\n    insert('country', {'a2':'RU', 'a3':'RUS', 'name':'Russian Federation'})\r\n    insert('country', {'a2':'RW', 'a3':'RWA', 'name':'Rwanda'})\r\n    insert('country', {'a2':'BL', 'a3':'BLM', 'name':'Saint Barth\u00e9lemy'})\r\n    insert('country', {'a2':'SH', 'a3':'SHN', 'name':'Saint Helena, Ascension and Tristan da Cunha'})\r\n    insert('country', {'a2':'KN', 'a3':'KNA', 'name':'Saint Kitts and Nevis'})\r\n    insert('country', {'a2':'LC', 'a3':'LCA', 'name':'Saint Lucia'})\r\n    insert('country', {'a2':'MF', 'a3':'MAF', 'name':'Saint Martin (French part)'})\r\n    insert('country', {'a2':'PM', 'a3':'SPM', 'name':'Saint Pierre and Miquelon'})\r\n    insert('country', {'a2':'VC', 'a3':'VCT', 'name':'Saint Vincent and the Grenadines'})\r\n    insert('country', {'a2':'WS', 'a3':'WSM', 'name':'Samoa'})\r\n    insert('country', {'a2':'SM', 'a3':'SMR', 'name':'San Marino'})\r\n    insert('country', {'a2':'ST', 'a3':'STP', 'name':'Sao Tome and Principe'})\r\n    insert('country', {'a2':'SA', 'a3':'SAU', 'name':'Saudi Arabia'})\r\n    insert('country', {'a2':'SN', 'a3':'SEN', 'name':'Senegal'})\r\n    insert('country', {'a2':'RS', 'a3':'SRB', 'name':'Serbia'})\r\n    insert('country', {'a2':'SC', 'a3':'SYC', 'name':'Seychelles'})\r\n    insert('country', {'a2':'SL', 'a3':'SLE', 'name':'Sierra Leone'})\r\n    insert('country', {'a2':'SG', 'a3':'SGP', 'name':'Singapore'})\r\n    insert('country', {'a2':'SX', 'a3':'SXM', 'name':'Sint Maarten (Dutch part)'})\r\n    insert('country', {'a2':'SK', 'a3':'SVK', 'name':'Slovakia'})\r\n    insert('country', {'a2':'SI', 'a3':'SVN', 'name':'Slovenia'})\r\n    insert('country', {'a2':'SB', 'a3':'SLB', 'name':'Solomon Islands'})\r\n    insert('country', {'a2':'SO', 'a3':'SOM', 'name':'Somalia'})\r\n    insert('country', {'a2':'ZA', 'a3':'ZAF', 'name':'South Africa'})\r\n    insert('country', {'a2':'GS', 'a3':'SGS', 'name':'South Georgia and the South Sandwich Islands'})\r\n    insert('country', {'a2':'SS', 'a3':'SSD', 'name':'South Sudan'})\r\n    insert('country', {'a2':'ES', 'a3':'ESP', 'name':'Spain'})\r\n    insert('country', {'a2':'LK', 'a3':'LKA', 'name':'Sri Lanka'})\r\n    insert('country', {'a2':'SD', 'a3':'SDN', 'name':'Sudan'})\r\n    insert('country', {'a2':'SR', 'a3':'SUR', 'name':'Suriname'})\r\n    insert('country', {'a2':'SJ', 'a3':'SJM', 'name':'Svalbard and Jan Mayen'})\r\n    insert('country', {'a2':'SE', 'a3':'SWE', 'name':'Sweden'})\r\n    insert('country', {'a2':'CH', 'a3':'CHE', 'name':'Switzerland'})\r\n    insert('country', {'a2':'SY', 'a3':'SYR', 'name':'Syrian Arab Republic'})\r\n    insert('country', {'a2':'TW', 'a3':'TWN', 'name':'Taiwan, Province of China'})\r\n    insert('country', {'a2':'TJ', 'a3':'TJK', 'name':'Tajikistan'})\r\n    insert('country', {'a2':'TZ', 'a3':'TZA', 'name':'Tanzania, United Republic of'})\r\n    insert('country', {'a2':'TH', 'a3':'THA', 'name':'Thailand'})\r\n    insert('country', {'a2':'TL', 'a3':'TLS', 'name':'Timor-Leste'})\r\n    insert('country', {'a2':'TG', 'a3':'TGO', 'name':'Togo'})\r\n    insert('country', {'a2':'TK', 'a3':'TKL', 'name':'Tokelau'})\r\n    insert('country', {'a2':'TO', 'a3':'TON', 'name':'Tonga'})\r\n    insert('country', {'a2':'TT', 'a3':'TTO', 'name':'Trinidad and Tobago'})\r\n    insert('country', {'a2':'TN', 'a3':'TUN', 'name':'Tunisia'})\r\n    insert('country', {'a2':'TR', 'a3':'TUR', 'name':'Turkey'})\r\n    insert('country', {'a2':'TM', 'a3':'TKM', 'name':'Turkmenistan'})\r\n    insert('country', {'a2':'TC', 'a3':'TCA', 'name':'Turks and Caicos Islands'})\r\n    insert('country', {'a2':'TV', 'a3':'TUV', 'name':'Tuvalu'})\r\n    insert('country', {'a2':'UG', 'a3':'UGA', 'name':'Uganda'})\r\n    insert('country', {'a2':'UA', 'a3':'UKR', 'name':'Ukraine'})\r\n    insert('country', {'a2':'AE', 'a3':'ARE', 'name':'United Arab Emirates'})\r\n    insert('country', {'a2':'GB', 'a3':'GBR', 'name':'United Kingdom of Great Britain and Northern Ireland'})\r\n    insert('country', {'a2':'US', 'a3':'USA', 'name':'United States of America'})\r\n    insert('country', {'a2':'UM', 'a3':'UMI', 'name':'United States Minor Outlying Islands'})\r\n    insert('country', {'a2':'UY', 'a3':'URY', 'name':'Uruguay'})\r\n    insert('country', {'a2':'UZ', 'a3':'UZB', 'name':'Uzbekistan'})\r\n    insert('country', {'a2':'VU', 'a3':'VUT', 'name':'Vanuatu'})\r\n    insert('country', {'a2':'VE', 'a3':'VEN', 'name':'Venezuela (Bolivarian Republic of)'})\r\n    insert('country', {'a2':'VN', 'a3':'VNM', 'name':'Viet Nam'})\r\n    insert('country', {'a2':'VG', 'a3':'VGB', 'name':'Virgin Islands (British)'})\r\n    insert('country', {'a2':'VI', 'a3':'VIR', 'name':'Virgin Islands (U.S.)'})\r\n    insert('country', {'a2':'WF', 'a3':'WLF', 'name':'Wallis and Futuna'})\r\n    insert('country', {'a2':'EH', 'a3':'ESH', 'name':'Western Sahara'})\r\n    insert('country', {'a2':'YE', 'a3':'YEM', 'name':'Yemen'})\r\n    insert('country', {'a2':'ZM', 'a3':'ZMB', 'name':'Zambia'})\r\n    insert('country', {'a2':'ZW', 'a3':'ZWE', 'name':'Zimbabwe'})\r\n    import eu_patch",
   "comment": "",
   "last_line": "7",
   "q2_time": "20240329214840",
   "q2_mode": "u"
  },
  {
   "name": "eu_patch",
   "script": "update('country', {'a2':'BE','eu':'*'})\r\nupdate('country', {'a2':'BG','eu':'*'})\r\nupdate('country', {'a2':'DK','eu':'*'})\r\nupdate('country', {'a2':'DE','eu':'*'})\r\nupdate('country', {'a2':'EE','eu':'*'})\r\nupdate('country', {'a2':'FI','eu':'*'})\r\nupdate('country', {'a2':'FR','eu':'*'})\r\nupdate('country', {'a2':'GR','eu':'*'})\r\nupdate('country', {'a2':'IE','eu':'*'})\r\nupdate('country', {'a2':'IT','eu':'*'})\r\nupdate('country', {'a2':'HR','eu':'*'})\r\nupdate('country', {'a2':'LV','eu':'*'})\r\nupdate('country', {'a2':'LT','eu':'*'})\r\nupdate('country', {'a2':'LU','eu':'*'})\r\nupdate('country', {'a2':'MT','eu':'*'})\r\nupdate('country', {'a2':'NL','eu':'*'})\r\nupdate('country', {'a2':'AT','eu':'*'})\r\nupdate('country', {'a2':'PL','eu':'*'})\r\nupdate('country', {'a2':'PT','eu':'*'})\r\nupdate('country', {'a2':'RO','eu':'*'})\r\nupdate('country', {'a2':'SE','eu':'*'})\r\nupdate('country', {'a2':'SK','eu':'*'})\r\nupdate('country', {'a2':'SI','eu':'*'})\r\nupdate('country', {'a2':'ES','eu':'*'})\r\nupdate('country', {'a2':'CZ','eu':'*'})\r\nupdate('country', {'a2':'HU','eu':'*'})\r\nupdate('country', {'a2':'CY','eu':'*'})\r\n\r\nupdate('country', {'a2':'AT','mwst':'20'})\r\nupdate('country', {'a2':'BE','mwst':'21'})\r\nupdate('country', {'a2':'BG','mwst':'20'})\r\nupdate('country', {'a2':'HR','mwst':'25'})\r\nupdate('country', {'a2':'CY','mwst':'19'})\r\nupdate('country', {'a2':'CZ','mwst':'21'})\r\nupdate('country', {'a2':'DK','mwst':'25'})\r\nupdate('country', {'a2':'EE','mwst':'22'})\r\nupdate('country', {'a2':'FI','mwst':'24'})\r\nupdate('country', {'a2':'FR','mwst':'20'})\r\nupdate('country', {'a2':'DE','mwst':'19'})\r\nupdate('country', {'a2':'GR','mwst':'24'})\r\nupdate('country', {'a2':'HU','mwst':'27'})\r\nupdate('country', {'a2':'IS','mwst':'24'})\r\nupdate('country', {'a2':'IE','mwst':'23'})\r\nupdate('country', {'a2':'IT','mwst':'22'})\r\nupdate('country', {'a2':'LV','mwst':'21'})\r\nupdate('country', {'a2':'LT','mwst':'21'})\r\nupdate('country', {'a2':'LU','mwst':'17'})\r\nupdate('country', {'a2':'MT','mwst':'18'})\r\nupdate('country', {'a2':'NL','mwst':'21'})\r\nupdate('country', {'a2':'NO','mwst':'25'})\r\nupdate('country', {'a2':'PL','mwst':'23'})\r\nupdate('country', {'a2':'PT','mwst':'23'})\r\nupdate('country', {'a2':'RO','mwst':'19'})\r\nupdate('country', {'a2':'SK','mwst':'20'})\r\nupdate('country', {'a2':'SI','mwst':'22'})\r\nupdate('country', {'a2':'ES','mwst':'21'})\r\nupdate('country', {'a2':'SE','mwst':'25'})\r\nupdate('country', {'a2':'CH','mwst':'8.1'})\r\nupdate('country', {'a2':'TR','mwst':'20'})",
   "comment": "",
   "last_line": "60",
   "q2_time": "20240314214920",
   "q2_mode": "u"
  },
  {
   "name": "get_such",
   "script": "def get_such_bank(algo_id):\r\n    x = get(\"konten_buchungs_algo\", f\"id = {algo_id}\")\r\n    st0 = x[\"Suchtext_0\"]\r\n    st1 = x[\"Suchtext_1\"]\r\n    \r\n    sf0 = int_(x[\"suchfelder_0\"])\r\n    sf1 = int_(x[\"suchfelder_0\"])\r\n    whr = []\r\n    \r\n    if st0 !=\"\":\r\n        if (sf0 == 1 or sf0 == 2):\r\n            whr.append(f\"content1 like '%{st0}%'\")\r\n        if (sf0 == 1 or sf0 == 3):\r\n            whr.append(f\"content2 like '%{st0}%'\")\r\n        if (sf0 == 1 or sf0 == 4):\r\n            whr.append(f\"content3 like '%{st0}%'\")\r\n    \r\n    if st1 !=\"\":\r\n        if (sf1 == 1 or sf1 == 2):\r\n            whr.append(f\"content1 like '%{st1}%'\")\r\n        if (sf1 == 1 or sf1 == 3):\r\n            whr.append(f\"content2 like '%{st1}%'\")\r\n        if (sf1 == 1 or sf1 == 4):\r\n            whr.append(f\"content3 like '%{st1}%'\")\r\n    if len(whr) == 0:\r\n        return \"\"\r\n    whr_text = \" or \".join(whr)\r\n    return whr_text\r\n        \r\nif __name__ == \"__main__\":\r\n    q2mess(get_such_bank(1))",
   "comment": "",
   "last_line": "31",
   "q2_time": "20240317222557",
   "q2_mode": "u"
  },
  {
   "name": "get_such_bank",
   "script": "def get_such_bank(algo_id):\r\n    x = get(\"konten_buchungs_algo\", f\"id = {algo_id}\")\r\n    if not x:\r\n        return \"\"\r\n    whr = []\r\n    for index in (0,1):\r\n        suchtext = x[f\"Suchtext_{index}\"]\r\n        suchtfelder = int_(x[f\"suchfelder_{index}\"])\r\n        whr0 = []\r\n        if suchtext !=\"\":\r\n            if suchtfelder in (1,2):\r\n                whr0.append(f\"content1 like '%{suchtext}%'\")\r\n            if suchtfelder in (1,3):\r\n                whr0.append(f\"content2 like '%{suchtext}%'\")\r\n            if suchtfelder in (1, 4):\r\n                whr0.append(f\"content3 like '%{suchtext}%'\")\r\n        if whr0:\r\n            whr0=\" or \".join(whr0)\r\n            whr.append(f\" ({whr0}) \")\r\n\r\n    if len(whr) == 0:\r\n        return \"\"\r\n    whr_text = \" and \".join(whr)\r\n    return whr_text\r\n        \r\nif __name__ == \"__main__\":\r\n    q2mess(get_such_bank(0))",
   "comment": "",
   "last_line": "5",
   "q2_time": "20240314095750",
   "q2_mode": "u"
  },
  {
   "name": "get_such_sales",
   "script": "def get_such_sales(algo_id):\r\n    x = get(\"shops_buchungs_algo\", f\"id = {algo_id}\")\r\n    if not x:\r\n        return \"\"\r\n    whr = []\r\n    for index in (0,1):\r\n        suchtext = x[f\"Suchtext_{index}\"]\r\n        suchtfelder = int_(x[f\"suchfelder_{index}\"])\r\n        whr0 = []\r\n        if suchtext !=\"\":\r\n            if suchtfelder in (1,2):\r\n                suchtext = num(suchtext )\r\n                whr0.append(f\"cast(mwst as decimal) = {suchtext}\")\r\n            if suchtfelder in (1,3):\r\n                whr0.append(f\"content1 like '%{suchtext}%'\")\r\n            if suchtfelder in (1, 4):\r\n                whr0.append(f\"rechnung like '%{suchtext}%'\")\r\n            if suchtfelder in (1, 5):\r\n                whr0.append(f\"land like '%{suchtext}%'\")\r\n            if suchtfelder in (1, 6):\r\n                whr0.append(f\"currency like '%{suchtext}%'\")\r\n        if whr0:\r\n            whr0=\" or \".join(whr0)\r\n            whr.append(f\" ({whr0}) \")\r\n\r\n    if num(x[\"euland\"]) == 2:\r\n        whr.append(\"land in (select a2 from country where eu<>'')\")\r\n        \r\n    if num(x[\"euland\"]) == 3:\r\n        whr.append(\"land in (select a2 from country where eu='')\")\r\n\r\n    if len(whr) == 0:\r\n        return \"\"\r\n    whr_text = \" and \".join(whr)\r\n    return whr_text\r\n        \r\nif __name__ == \"__main__\":\r\n    q2mess(get_such_sales(0))",
   "comment": "",
   "last_line": "30",
   "q2_time": "20240326151356",
   "q2_mode": "u"
  },
  {
   "name": "load_bank",
   "script": "class Loader():\r\n    def __init__(self, date1, date2, konto_id):\r\n        self.date1=date1\r\n        self.date2=date2\r\n        self.konto_id = int_(konto_id)\r\n        bk = get(\"konten\",  f\"konto_id={konto_id}\", \"bk\")\r\n        self.algo = int_(get(\"banken\",  f\"bk={bk}\", \"banken.algo\"))\r\n        self.algo_name = get(\"banken\",  f\"bk={bk}\", \"name\")\r\n\r\n    def run(self):\r\n        ext = \"*.csv\"\r\n        # downloads_path = os.path.expanduser(\"~/Downloads\")\r\n        downloads_path = \"\"\r\n        # self.filename = q2_app.get_open_file_dialoq(\"Open CSV\", downloads_path, ext)[0]\r\n        self.filename = q2_app.get_open_file_dialoq(f\"Open CSV ({self.algo_name})\", downloads_path, ext)[0]\r\n        if not self.filename:\r\n            return\r\n        rez = None\r\n        if self.algo == 1:\r\n            rez = self.algo_1()\r\n        elif self.algo == 2:\r\n            rez = self.algo_2()\r\n        elif self.algo == 3:\r\n            rez = self.algo_3()\r\n        elif self.algo == 4:\r\n            rez = self.algo_4()\r\n        elif self.algo == 5:\r\n            rez = self.algo_5()\r\n        elif self.algo == 6:\r\n            rez = self.algo_6()\r\n        elif self.algo == 7:\r\n            rez = self.algo_7()\r\n\r\n        if rez:\r\n            self.insert_bank(rez)\r\n            return True\r\n        return None\r\n\r\n    def insert_bank(self, bank_data):\r\n        bank_data = [row for row in bank_data if row[\"date\"] >= self.date1 or row[\"date\"] <= self.date2]\r\n        if len(bank_data) == 0:\r\n            return\r\n        # schon_da = q2cursor(f\"select * from bank where date>='{self.date1}' and date<='{self.date2}' and konto_id={self.konto_id}\").row_count()\r\n        q2cursor(f\"delete from bank where date>='{self.date1}' and date<='{self.date2}' and konto_id={self.konto_id}\")\r\n        \r\n        w = q2_wait(len(bank_data), \"Inserting rows\")\r\n        transaction()\r\n        for x in bank_data:\r\n            w.step(10)\r\n            if not insert(\"bank\", x):\r\n                q2mess(\"An error occurred while inserting bank data.\")\r\n                ?q2app.q2_app.db_data.last_sql_error\r\n                break\r\n        commit()\r\n        w.close()\r\n\r\n\r\n    def open_csv(self, codepage=\"utf8\", key_string=None, delimiter=\",\"):\r\n        import csv\r\n        try:\r\n            with open(self.filename, encoding=codepage) as csvfile:\r\n                first_line=csvfile.readline()\r\n                if  key_string not in first_line:\r\n                    q2mess(f\"\"\"<font color=red>Falche Datei </font>\r\n                            <br><b>{self.filename}</b>\r\n                            <br>(nicht <b>{self.algo_name}</b>)\r\n                            <br>kein \"{key_string}\"\r\n                            <br>\r\n                            <br> in der ersten linie\r\n                            <br>\r\n                            <br>{first_line}\"\"\")\r\n                    return []\r\n                csvfile.seek(0, 0)\r\n                reader = csv.reader(csvfile, delimiter=delimiter)\r\n                return [x for x in reader]\r\n        except Exception as error:\r\n            q2mess(f\"Fehler: {error}\")\r\n            return []\r\n    \r\n\r\n    def algo_1(self): # Sparkasse\r\n        from datetime import datetime\r\n        rez =self.open_csv(codepage=\"cp1252\"\r\n                        , key_string='\"Auftragskonto\";\"Buchungstag\";\"Valutadatum\";\"Buchungstext\";\"Verwendungszweck\";\"Glaeubiger ID\";\"Mandatsreferenz\";\"Kundenreferenz (End-to-End)\"'\r\n                        , delimiter=\";\")\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            if len(x) < 15:\r\n                continue\r\n            \r\n            dct={ \r\n                    \"konto_id\":  self.konto_id ,\r\n                    \"date\":  datetime.strptime(x[1].split(\" \")[0], \"%d.%m.%y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[3],\r\n                    \"content2\": x[4],\r\n                    \"content3\": x[11],\r\n                    \"betrag\": x[14].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n    \r\n    def algo_2(self):  # Postbank\r\n        from datetime import datetime\r\n        rez =self.open_csv(codepage=\"utf8\"\r\n                        , key_string='Ums\u00e4tze'\r\n                        , delimiter=\";\")\r\n        rez0=[]\r\n        for x in rez[8:-1]:\r\n            if len(x) < 12:\r\n                continue\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id ,\r\n                    \"date\":  datetime.strptime(x[0].split(\" \")[0], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[2],\r\n                    \"content2\": x[3],\r\n                    \"content3\": x[4],\r\n                    \"betrag\": x[11].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n\r\n    def algo_3(self):  # ING\r\n        from datetime import datetime\r\n        rez =self.open_csv(codepage=\"cp1252\"\r\n                        , key_string='Umsatzanzeige;Datei erstellt'\r\n                        , delimiter=\";\")\r\n        rez0=[]\r\n\r\n        for x in rez[13:]:\r\n            if len(x) < 6:\r\n                continue\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id,\r\n                    \"date\":  datetime.strptime(x[0], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[2]+ \" \" + x[4],\r\n                    \"content2\": x[3],\r\n                    \"content3\": x[2],\r\n                    \"betrag\": x[5].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n\r\n    def algo_4(self): # PayPal\r\n        from datetime import datetime\r\n        rez =self.open_csv(codepage=\"utf8\"\r\n                        , key_string='\"Datum\",\"Uhrzeit\",\"Zeitzone\",\"Name\",\"Typ\",\"Status\",\"W\u00e4hrung\",\"Brutto\",\"Geb\u00fchr\"'\r\n                        , delimiter=\",\")\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            if len(x) < 9:\r\n                continue\r\n            if x[5] == \"Ausstehend\":\r\n                continue\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id,\r\n                    \"date\":  datetime.strptime(x[0], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[3] + \" \" + x[4],\r\n                    \"content2\": x[11],\r\n                    \"content3\": x[37],\r\n                    \"betrag\": x[7].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    }\r\n            rez0.append(dct)\r\n            gebuhr = num(x[8].replace(\".\", \"\").replace(\",\", \".\"))\r\n            if gebuhr !=0:\r\n                dct0 = dict(dct)\r\n                dct0['betrag'] = str(gebuhr)\r\n                rez0.append(dct0)\r\n        return rez0\r\n\r\n    def algo_5(self): # Kommerz\r\n        from datetime import datetime\r\n        rez =self.open_csv(codepage=\"utf8\"\r\n                        , key_string='Buchungstag;Wertstellung;Umsatzart;Buchungstext;Betrag;W\u00e4hrung;Auftraggeberkonto;Bankleitzahl'\r\n                        , delimiter=\";\")\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            if len(x) < 5:\r\n                continue\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id,\r\n                    \"date\":  datetime.strptime(x[0], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[3],\r\n                    \"content2\": x[2],\r\n                    \"content3\": \"\",\r\n                    \"betrag\": x[4].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n\r\n    def algo_6(self): # Finom\r\n        from datetime import datetime\r\n        rez =self.open_csv(codepage=\"utf8\"\r\n                        , key_string='Buchungsdatum,Time completed,Status,Transaktionsart,Auftraggeber/Empf\u00e4nger,Counterparty BIC'\r\n                        , delimiter=\",\")\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            if len(x) < 13:\r\n                continue\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id,\r\n                    \"date\":  datetime.strptime(x[0], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[4],\r\n                    \"content2\": x[7],\r\n                    \"content3\": \"\",\r\n                    \"betrag\": x[12].replace(\",\", \"\"),\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n\r\n    def algo_7(self): # HypoVereinsbank\r\n        from datetime import datetime\r\n        rez =self.open_csv(codepage=\"utf-16-le\"\r\n                        , key_string='Kontonummer;Buchungsdatum;Valuta;Empfaenger 1;Empfaenger 2;Verwendungszweck;Betrag;Waehrung'\r\n                        , delimiter=\";\")\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            if len(x) < 7:\r\n                continue\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id,\r\n                    \"date\":  datetime.strptime(x[1], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[5],\r\n                    \"content2\":  \"\",\r\n                    \"content3\": \"\",\r\n                    \"betrag\": x[6].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n\r\n            \r\nif __name__ == \"__main__\":\r\n    # Loader(\"2023-01-01\", \"2023-12-31\", 1)\r\n    # Loader(\"2023-01-01\", \"2023-12-31\", 2)\r\n    # Loader(\"2023-01-01\", \"2023-12-31\", 2)\r\n    pass",
   "comment": "",
   "last_line": "157",
   "q2_time": "20240313135427",
   "q2_mode": "u"
  },
  {
   "name": "load_sales",
   "script": "class Loader():\r\n    def __init__(self, date1, date2, shop_id, filename=\"\"):\r\n        self.date1=date1\r\n        self.date2=date2\r\n        self.shop_id = int_(shop_id)\r\n        pl = get(\"shops\",  f\"shop_id={shop_id}\", \"pl\")\r\n        self.algo = int_(get(\"plattformen\",  f\"pl={pl}\", \"algo\"))\r\n        self.algo_name = get(\"plattformen\",  f\"pl={pl}\", \"name\")\r\n        self.filename = filename\r\n        self.run()\r\n\r\n    def run(self):\r\n        ext = \"*.csv\"\r\n\r\n        downloads_path = os.path.expanduser(\"~/Downloads\")\r\n        downloads_path = \"\"\r\n        if self.filename == \"\":\r\n            self.filename = q2_app.get_open_file_dialoq(f\"Open CSV ({self.algo_name})\", downloads_path, ext)[0]\r\n        if not self.filename:\r\n            return\r\n        rez = None\r\n        if self.algo == 1:\r\n            rez = self.algo_1()\r\n        elif self.algo == 2:\r\n            rez = self.algo_2()\r\n        elif self.algo == 3:\r\n            rez = self.algo_3()\r\n        elif self.algo == 4:\r\n            rez = self.algo_4()\r\n        elif self.algo == 5:\r\n            rez = self.algo_5()\r\n        elif self.algo == 6:\r\n            rez = self.algo_6()\r\n        # elif self.algo == 7:\r\n            # rez = self.algo_7()\r\n\r\n        if rez is not None:\r\n            self.insert_sales(rez)\r\n\r\n    def insert_sales(self, sales_data):\r\n        sales_data = [row for row in sales_data if row[\"date\"] >= self.date1 or row[\"date\"] <= self.date2]\r\n        if len(sales_data) == 0:\r\n            return\r\n        q2cursor(f\"delete from sales where date>='{self.date1}' and date<='{self.date2}' and shop_id={self.shop_id}\")\r\n        \r\n        w = q2_wait(len(sales_data), \"Inserting rows\")\r\n        transaction()\r\n        for x in sales_data:\r\n            w.step(1000)\r\n            if not insert(\"sales\", x):\r\n                q2mess(\"An error occurred while inserting sales data.\")\r\n                ?q2app.q2_app.db_data.last_sql_error\r\n                break\r\n        commit()\r\n        w.close()\r\n    \r\n    def open_csv(self, codepage=\"utf8\", key_string=None, delimiter=\",\"):\r\n        import csv\r\n        try:\r\n            with open(self.filename, encoding=codepage) as csvfile:\r\n                first_line=csvfile.readline()\r\n                if  key_string not in first_line:\r\n                    q2mess(f\"\"\"<font color=red>Falche Datei </font>\r\n                            <br><b>{self.filename}</b>\r\n                            <br>(nicht <b>{self.algo_name}</b>)\r\n                            <br>kein \"{key_string}\"\r\n                            <br>\r\n                            <br> in der ersten linie\r\n                            <br>\r\n                            <br>{first_line}\"\"\")\r\n                    return []\r\n                csvfile.seek(0, 0)\r\n                reader = csv.reader(csvfile, delimiter=delimiter)\r\n                return [x for x in reader]\r\n        except Exception as error:\r\n            q2mess(f\"Fehler: {error}\")\r\n            return []\r\n    \r\n    def algo_1(self): # AMAZON\r\n        from datetime import datetime\r\n        rez = self.open_csv(codepage=\"utf8\",\r\n                                    key_string='DRESS\",\"SUPPLIER_NAME\",\"SUPPLIER_VAT_NUMBER\",\"TAX_REPORTING_SCHEME\",\"TAX_COLLECTION_RESPONSIBILITY\"',\r\n                                    delimiter=\",\"\r\n                                    )\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            if len(x) < 83:\r\n                continue\r\n            dct={ \r\n                    \"shop_id\":  self.shop_id ,\r\n                    \"date\":   datetime.strptime(x[11], \"%d-%m-%Y\").strftime(\"%Y-%m-%d\"),\r\n                    \"content1\": x[14],\r\n                    \"content2\": x[6],\r\n                    \"betrag\": str(num(x[45].replace(\"\u20ac\", \"\"))),\r\n                    \"kosten\": str(num(x[48])),\r\n                    \"mwst\": str(num(x[30])*100),\r\n                    \"rechnung\": x[82],\r\n                    \"land\": x[79],\r\n                    \"currency\": x[53],\r\n                    }\r\n            # if x[30] == \"\":\r\n                # _land = x[65]\r\n                # _mwst = get(\"country\", f\"  a2='{_land}'  \", \"mwst\")\r\n                # dct['mwst'] = _mwst\r\n            if num(dct[\"betrag\"])!=0 or num(dct[\"kosten\"])!=0:\r\n                rez0.append(dct)\r\n        return rez0\r\n    \r\n    def algo_2(self): # ebay\r\n        from datetime import datetime\r\n        rez = self.open_csv(codepage=\"utf8\",\r\n                                    key_string=',--,--,--,--,--,--,--,--,--,-',\r\n                                    delimiter=\";\"\r\n                                    )\r\n        rez0=[]\r\n        for x in rez[12:]:\r\n            kosten = num(x[27].replace(\".\", \"\").replace(\",\", \".\"))\r\n            kosten += num(x[28].replace(\".\", \"\").replace(\",\", \".\"))\r\n            kosten += num(x[29].replace(\".\", \"\").replace(\",\", \".\"))\r\n            kosten += num(x[30].replace(\".\", \"\").replace(\",\", \".\"))\r\n            kosten += num(x[31].replace(\".\", \"\").replace(\",\", \".\"))\r\n            \r\n            betrug = num(x[32].replace(\".\", \"\").replace(\",\", \".\"))\r\n\r\n            if betrug < 0 and x[12] != \"--\":\r\n                kosten = betrug\r\n                betrug = 0\r\n            \r\n            kosten  = str(-kosten)\r\n            betrug  = str(betrug)\r\n            dct={ \r\n                    \"shop_id\":  self.shop_id ,\r\n                    \"date\":  datetime.strptime(x[0], \"%d. %b %Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[19],\r\n                    \"betrag\": betrug,\r\n                    \"kosten\": kosten,\r\n                    \"mwst\": x[26].replace(\"%\", \"\"),\r\n                    \"rechnung\": x[2],\r\n                    \"land\": x[9],\r\n                    \"currency\": x[11],\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n\r\n    def algo_3(self): # etsy\r\n        import locale\r\n        from datetime import datetime\r\n       \r\n        lc = locale.setlocale(locale.LC_TIME)\r\n        locale.setlocale(locale.LC_TIME, \"de_DE\")\r\n\r\n        rez = self.open_csv(codepage=\"utf8\",\r\n                                    key_string='Datum,Art,Titel,Info,W\u00e4hrung,Betrag,\"Geb\u00fchren & Steuern\",Netto,\"Steuerliche Angaben\"',\r\n                                    delimiter=\",\"\r\n                                    )\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            dct={ \r\n                    \"shop_id\":  self.shop_id ,\r\n                    \"date\":  datetime.strptime(x[0], \"%d. %B %Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[2],\r\n                    \"betrag\": str(num(x[5].replace(\"\u20ac\", \"\"))),\r\n                    \"kosten\": str(-num(x[6].replace(\"\u20ac\", \"\"))),\r\n                    \"mwst\": 0,\r\n                    \"rechnung\": x[3][:50],\r\n                    \"land\": \"\",\r\n                    \"currency\": x[4],\r\n                    }\r\n            rez0.append(dct)\r\n        locale.setlocale(locale.LC_TIME, lc)\r\n        return rez0\r\n    \r\n    def algo_4(self): # shopify\r\n        from datetime import datetime\r\n\r\n        rez = self.open_csv(codepage=\"utf8\",\r\n                                    key_string='Name,Email,Financial Status,Paid at,Fulfillment Status,Fulfilled at,Accepts Marketing,Currency,Subtotal,Shipping,Taxes,Total,Discount Code,Discount Amount,Shipp',\r\n                                    delimiter=\",\"\r\n                                    )\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            if x[3] == \"\":\r\n                continue\r\n            dct={ \r\n                    \"shop_id\":  self.shop_id ,\r\n                    \"date\":  x[3][:10],\r\n                    \"content1\": x[17],\r\n                    \"betrag\": x[11],\r\n                    \"kosten\": 0,\r\n                    \"mwst\": 19 if x[42] == \"DE\" else 0,\r\n                    \"rechnung\": x[0],\r\n                    \"land\": x[42],\r\n                    \"currency\": x[7],\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n        \r\n    def algo_5(self): # easybill\r\n        from datetime import datetime\r\n        rez = self.open_csv(codepage=\"cp1252\",\r\n                                    key_string='EXTF\";700;21;\"Buchungsstapel\"',\r\n                                    delimiter=\";\"\r\n                                    )\r\n        rez0=[]\r\n        for x in rez[3:]:\r\n            if x == []:\r\n                continue\r\n            dct={ \r\n                    \"shop_id\":  self.shop_id ,\r\n                    \"date\":  datetime.strptime(x[116], \"%d%m%Y\").strftime(\"%Y-%m-%d\"),\r\n                    \"content1\": x[13],\r\n                    \"betrag\": x[0].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    \"kosten\": 0,\r\n                    \"mwst\": 19 if x[39][:2] == \"DE\" else 0,\r\n                    \"land\": x[39][:2],\r\n                    \"currency\": x[3],\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n        \r\n    def algo_6(self): # plenty\r\n        from datetime import datetime\r\n        rez = self.open_csv(codepage=\"utf8\",\r\n                                    key_string='Belegnummer;Order ID;Soll-Haben;Kunde ID;Kunde;Firma;Vor',\r\n                                    delimiter=\";\"\r\n                                    )\r\n        rez0=[]\r\n        for x in rez[3:]:\r\n            if x == []:\r\n                continue\r\n            dct={ \r\n                    \"shop_id\":  self.shop_id ,\r\n                    \"date\":   datetime.strptime(x[11][:10], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\"),\r\n                    \"content1\": \"\",\r\n                    \"betrag\": str(num(x[15].replace(\",\", \".\"))),\r\n                    \"kosten\": 0,\r\n                    \"mwst\": 0,\r\n                    \"rechnung\": x[0],\r\n                    \"land\": x[8],\r\n                    \"currency\": x[18],\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n    \r\nif __name__ == \"__main__\":\r\n    # Loader(const.date1, const.date2, 6, r\"C:\\Users\\andre\\Desktop\\Lehrmann GmbH\\Sales\\plentyMarkets_AccountBook_2024-1.csv\")\r\n    pass",
   "comment": "",
   "last_line": "95",
   "q2_time": "20240327091919",
   "q2_mode": "u"
  },
  {
   "name": "manifest",
   "script": "myapp.app_title = \"VorBuchhaltung\"\nmyapp.app_description = (\"Die Anwendung ist eine integrierte Plattform, \" \r\n                                    \"die einen automatisierten Prozess f\u00fcr den Import \"\r\n                                    \" von Verkaufsberichten aus verschiedenen \"\r\n                                    \"Online-Handelsplattformen sowie Banktransaktionsdaten \"\r\n                                    \"in eine einzige Informationsdatenbank bietet.\")\nmyapp.app_url = \"https://raw.githubusercontent.com/AndreiPuchko/q2market/main/vorbuchhaltung_app\"",
   "comment": "",
   "last_line": "8",
   "q2_time": "20240307220935",
   "q2_mode": "i"
  },
  {
   "name": "on_new_tab",
   "script": "",
   "comment": "",
   "last_line": "1",
   "q2_time": "20240307220935",
   "q2_mode": "i"
  },
  {
   "name": "plot",
   "script": "diver = 1\r\n\r\ncu = q2cursor(f\"\"\"\r\n    select  \r\n        abs(round(sum(summa),0)) as summa\r\n        , kosten.name as name\r\n    from bank, kosten \r\n    where bank.kr=kosten.kr and summa<0\r\n    group by kosten.kr\r\n    order by sum(summa)\r\n    \"\"\")\r\n\r\ncountries = [x['name'][:10] for x in cu.records()]\r\nprofit = [num(x['summa']) for x in cu.records()]\r\n    \r\nimport matplotlib.pyplot as plt\r\n\r\nfig, ax = plt.subplots()\r\n\r\nax.pie(profit, labels=countries)\r\n\r\nplt.show()\r\ncu.browse()",
   "comment": "",
   "last_line": "23",
   "q2_time": "20240307220935",
   "q2_mode": "i"
  },
  {
   "name": "q2date",
   "script": "class q2date:\r\n    def __init__(self, isostring):\r\n        self.date = str(isostring)\r\n    def first_day_of_month(self):\r\n        return f\"{self.date[:7]}-01\"\r\n    def last_day_of_month(self):\r\n        import calendar\r\n        day = calendar.monthrange(int_(self.year()), int_(self.month()))[1]\r\n        return f\"{self.date[:7]}-{day}\"\r\n    def year(self):\r\n        return self.date[:4]\r\n    def month(self):\r\n        return self.date[5:7]",
   "comment": "",
   "last_line": "13",
   "q2_time": "20240307220935",
   "q2_mode": "i"
  },
  {
   "name": "set_gegenkonto_bank",
   "script": "def set_gegenkonto_bank(konto_id):\r\n    import get_such_bank\r\n    cu = q2cursor(f\"\"\"\r\n                                select * \r\n                                from konten_buchungs_algo\r\n                                where konto_id = {konto_id}\r\n                            \"\"\")\r\n    w = q2_wait(cu.row_count(), \"Gegenkonto suchung\")\r\n    for x in cu.records():\r\n        w.step()\r\n        whr_text = get_such_bank(x['id'])\r\n        if whr_text == \"\":\r\n            return\r\n        for row in q2cursor(f\"select * from bank where ({whr_text}) and konto_id={x['konto_id']} and gegenkonto=''\").records():\r\n        # for row in q2cursor(f\"select * from bank where ({whr_text}) and konto_id={x['konto_id']}\").records():\r\n            row['gegenkonto'] = x['gegenkonto']\r\n            update(\"bank\", row)\r\n    w.close()\r\n\r\nif __name__ == \"__main__\":\r\n    set_gegenkonto_bank(1)",
   "comment": "",
   "last_line": "5",
   "q2_time": "20240314095002",
   "q2_mode": "u"
  },
  {
   "name": "set_gegenkonto_sales",
   "script": "def set_gegenkonto_sales(shop_id):\r\n    import get_such_sales\r\n    cu = q2cursor(f\"\"\"\r\n                                select * \r\n                                from shops_buchungs_algo\r\n                                where shop_id = {shop_id}\r\n                            \"\"\")\r\n    w = q2wait(cu.row_count(), \"Gegenkonto suchung\")\r\n    for x in cu.records():\r\n        w.step()\r\n        whr_text = get_such_sales(x['id'])\r\n        if whr_text == \"\":\r\n            continue\r\n        transaction()\r\n        for row in q2cursor(f\"\"\"select sales.id\r\n                                                , gegenkonto\r\n                                                , mwst \r\n                                                , land\r\n                                            from sales where ({whr_text}) \r\n                                                and shop_id={x['shop_id']}\r\n                                       \"\"\").records():\r\n            edit = False\r\n            if row['gegenkonto'] == \"\":\r\n                row['gegenkonto'] = x['gegenkonto']\r\n                edit = True\r\n            if x[\"set_mwst\"] and num(row[\"mwst\"])  == 0:\r\n                row[\"mwst\"] = get(\"country\", \"a2='%s'\" % row[\"land\"], \"mwst\")\r\n                edit = True\r\n            if edit:\r\n                update(\"sales\", row)\r\n        commit()\r\n    w.close()\r\n\r\nif __name__ == \"__main__\":\r\n    set_gegenkonto_sales(2)",
   "comment": "",
   "last_line": "11",
   "q2_time": "20240321145138",
   "q2_mode": "u"
  },
  {
   "name": "version",
   "script": "self.app_version = '2024-03-29 21:48:46'",
   "comment": "",
   "last_line": "0",
   "q2_time": "20240329214846",
   "q2_mode": "u"
  }
 ],
 "forms": [
  {
   "name": "bank",
   "title": "Kontobewebung",
   "seq": "8",
   "menu_path": "",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "bank",
   "form_table_sort": "date",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240314085502",
   "q2_mode": "u"
  },
  {
   "name": "bank_af",
   "title": "Kontobewebungen filter",
   "seq": "9",
   "menu_path": "Daten",
   "menu_text": "Kontobewebungen",
   "menu_before": "",
   "menu_icon": "$",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "*",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "auto_filter(\"bank\", mem)",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "mem.s.date1=const.date1\r\nmem.s.date2 = const.date2",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240326151551",
   "q2_mode": "u"
  },
  {
   "name": "banken",
   "title": "Banken",
   "seq": "1",
   "menu_path": "Ref",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "banken",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240307220935",
   "q2_mode": "i"
  },
  {
   "name": "berichte_sales",
   "title": "Ums\u00e4tze bericht",
   "seq": "12",
   "menu_path": "Berichte",
   "menu_text": "Ums\u00e4tze",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "",
   "ok_button": "*",
   "cancel_button": "*",
   "view_action": "",
   "form_table": "",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "import q2date\r\nmem.s.date1=const.date1\r\nmem.s.date2 = const.date2",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "q2cursor(f\"\"\"\r\n               select shops.name, land, mwst\r\n                    , round(sum(sales.betrag),2) as betrag\r\n                    , round(sum(sales.kosten), 2) as kosten\r\n                from sales, shops\r\n                where sales.shop_id = shops.shop_id\r\n                    and date>= '{mem.s.date1}' and date<= '{mem.s.date2}'\r\n                group by shops.shop_id, land, mwst\r\n            \"\"\").browse()\r\nreturn False",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240314085500",
   "q2_mode": "u"
  },
  {
   "name": "country",
   "title": "L\u00e4nder",
   "seq": "13",
   "menu_path": "Ref",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "*",
   "toolbar": "",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "country",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240314085500",
   "q2_mode": "u"
  },
  {
   "name": "einstellungen",
   "title": "Einstellungen",
   "seq": "14",
   "menu_path": "Ref",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "*",
   "toolbar": "",
   "ok_button": "*",
   "cancel_button": "*",
   "view_action": "",
   "form_table": "",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "for x in mem.controls:\r\n    column = x[\"column\"]\r\n    if column:\r\n        mem.s.__setattr__(column, const.__getattr__(column))",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "for x in mem.controls:\r\n    column = x[\"column\"]\r\n    if column:\r\n        const.__setattr__(column, mem.s.__getattr__(column))",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240314085459",
   "q2_mode": "u"
  },
  {
   "name": "konten",
   "title": "Konten",
   "seq": "2",
   "menu_path": "Ref",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "*",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "konten",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240307220935",
   "q2_mode": "i"
  },
  {
   "name": "konten_buchungs_algo",
   "title": "Buchung Algorithmus",
   "seq": "3",
   "menu_path": "",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "konten_buchungs_algo",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240307220935",
   "q2_mode": "i"
  },
  {
   "name": "plattformen",
   "title": "Plattformen",
   "seq": "4",
   "menu_path": "Ref",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "*",
   "toolbar": "",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "plattformen",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240313124433",
   "q2_mode": "u"
  },
  {
   "name": "sales",
   "title": "Ums\u00e4tze",
   "seq": "10",
   "menu_path": "",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "sales",
   "form_table_sort": "date",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240314085501",
   "q2_mode": "u"
  },
  {
   "name": "sales_af",
   "title": "Ums\u00e4tze filter",
   "seq": "11",
   "menu_path": "Daten",
   "menu_text": "Ums\u00e4tze",
   "menu_before": "",
   "menu_icon": "\u2655",
   "menu_tiptext": "",
   "menu_separator": "*",
   "toolbar": "*",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "auto_filter(\"sales\", mem)",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "mem.s.date1=const.date1\r\nmem.s.date2 = const.date2\r\n?mem.s.laden",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240321093446",
   "q2_mode": "u"
  },
  {
   "name": "shops",
   "title": "L\u00e4den",
   "seq": "5",
   "menu_path": "Ref",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "*",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "shops",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240307220935",
   "q2_mode": "i"
  },
  {
   "name": "shops_buchungs_algo",
   "title": "Shop Buchung Algorithmus",
   "seq": "6",
   "menu_path": "",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "shops_buchungs_algo",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "mem.s.set_konto=1",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240315120950",
   "q2_mode": "u"
  }
 ],
 "lines": [
  {
   "id": "64",
   "name": "bank",
   "column": "id",
   "label": "Id",
   "gridlabel": "",
   "seq": "1",
   "nogrid": "*",
   "noform": "*",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "*",
   "ai": "*",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220935",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "65",
   "name": "bank",
   "column": "date",
   "label": "Buchungstag",
   "gridlabel": "",
   "seq": "3",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "date",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220935",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "66",
   "name": "bank",
   "column": "content1",
   "label": "Buchungstext",
   "gridlabel": "",
   "seq": "4",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "88",
   "tag": "",
   "control": "text",
   "pic": "",
   "datatype": "char",
   "datalen": "250",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240326130954",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "67",
   "name": "bank",
   "column": "content3",
   "label": "An wen/Von wem",
   "gridlabel": "",
   "seq": "7",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "1",
   "tag": "",
   "control": "text",
   "pic": "",
   "datatype": "char",
   "datalen": "250",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240326130933",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "68",
   "name": "bank",
   "column": "betrag",
   "label": "Betrag",
   "gridlabel": "",
   "seq": "9",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "dec",
   "datalen": "15",
   "datadec": "2",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "69",
   "name": "bank",
   "column": "content2",
   "label": "Verwendungszweck",
   "gridlabel": "",
   "seq": "5",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "2",
   "tag": "",
   "control": "text",
   "pic": "",
   "datatype": "char",
   "datalen": "250",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240326130927",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "70",
   "name": "bank",
   "column": "konto_id",
   "label": "Konto",
   "gridlabel": "",
   "seq": "2",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "konten",
   "to_column": "konto_id",
   "related": "konto_name",
   "to_form": "konten",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "71",
   "name": "bank",
   "column": "gegenkonto",
   "label": "Gegenkonto",
   "gridlabel": "",
   "seq": "10",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "20",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "72",
   "name": "banken",
   "column": "bk",
   "label": "Kode",
   "gridlabel": "",
   "seq": "2",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "*",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315114420",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "73",
   "name": "banken",
   "column": "name",
   "label": "Name",
   "gridlabel": "",
   "seq": "3",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "250",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315114420",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "74",
   "name": "banken",
   "column": "algo",
   "label": "Laden Algorithmus",
   "gridlabel": "",
   "seq": "4",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "radio",
   "pic": "Sparkasse;Postbank;ING;PayPal;Commerzbank;Finom;HypoVereinsbank",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315114420",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "75",
   "name": "berichte_sales",
   "column": "date1",
   "label": "Von",
   "gridlabel": "",
   "seq": "0",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "date",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "76",
   "name": "berichte_sales",
   "column": "date2",
   "label": "bis",
   "gridlabel": "",
   "seq": "1",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "date",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "77",
   "name": "country",
   "column": "a2",
   "label": "Kode alpha-2",
   "gridlabel": "",
   "seq": "1",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "2",
   "datadec": "0",
   "migrate": "*",
   "pk": "*",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "78",
   "name": "country",
   "column": "name",
   "label": "Name",
   "gridlabel": "",
   "seq": "3",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "100",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "79",
   "name": "country",
   "column": "mwst",
   "label": "MwSt",
   "gridlabel": "",
   "seq": "4",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "dec",
   "datalen": "6",
   "datadec": "2",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "80",
   "name": "country",
   "column": "a3",
   "label": "Kode Alpha-3",
   "gridlabel": "",
   "seq": "2",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "3",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "162",
   "name": "country",
   "column": "eu",
   "label": "EU Mitglied",
   "gridlabel": "",
   "seq": "5",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "check",
   "pic": "",
   "datatype": "char",
   "datalen": "1",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315084705",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "125",
   "name": "einstellungen",
   "column": "date1",
   "label": "ab",
   "gridlabel": "",
   "seq": "2",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "label",
   "pic": "",
   "datatype": "date",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315113419",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "126",
   "name": "einstellungen",
   "column": "date2",
   "label": "bis",
   "gridlabel": "",
   "seq": "3",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "date",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315113419",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "127",
   "name": "einstellungen",
   "column": "",
   "label": "Arbeitsperiode",
   "gridlabel": "",
   "seq": "1",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "label",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315113419",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "81",
   "name": "konten",
   "column": "bk",
   "label": "Bank",
   "gridlabel": "",
   "seq": "3",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "banken",
   "to_column": "bk",
   "related": "name",
   "to_form": "banken",
   "comment": "",
   "code_when": "mem.heap.labk = mem.s.bk",
   "code_show": "",
   "code_valid": "if mem.heap.labk != mem.s.bk:\r\n    mem.s.konto_name = get(\"banken\", f\"bk={mem.s.bk}\", \"name\")",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "82",
   "name": "konten",
   "column": "konto_name",
   "label": "Kontonummer",
   "gridlabel": "",
   "seq": "4",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "200",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "if mem.s.konto_name == \"\":\r\n    mem.s.konto_name = get(\"banken\", f\"bk={mem.s.bk}\", \"name\")",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "83",
   "name": "konten",
   "column": "buchung_konto",
   "label": "Buchungskonto",
   "gridlabel": "",
   "seq": "6",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "20",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "84",
   "name": "konten",
   "column": "iban",
   "label": "IBAN",
   "gridlabel": "",
   "seq": "5",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "50",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "85",
   "name": "konten",
   "column": "details",
   "label": "Details",
   "gridlabel": "",
   "seq": "10",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "text",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "86",
   "name": "konten",
   "column": "konto_id",
   "label": "Kode",
   "gridlabel": "",
   "seq": "2",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "*",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "87",
   "name": "konten",
   "column": "default_gegenkonto_aus",
   "label": "Default Gegenkonto-Aus",
   "gridlabel": "",
   "seq": "8",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "20",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "88",
   "name": "konten",
   "column": "default_gegenkonto_ein",
   "label": "Default Gegenkonto-Ein",
   "gridlabel": "",
   "seq": "7",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "20",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "89",
   "name": "konten",
   "column": "saldo",
   "label": "Anfangssaldo",
   "gridlabel": "",
   "seq": "11",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "dec",
   "datalen": "15",
   "datadec": "2",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "90",
   "name": "konten_buchungs_algo",
   "column": "id",
   "label": "",
   "gridlabel": "",
   "seq": "3",
   "nogrid": "*",
   "noform": "*",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "*",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240314084347",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "91",
   "name": "konten_buchungs_algo",
   "column": "konto_id",
   "label": "Konto",
   "gridlabel": "",
   "seq": "4",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "konten",
   "to_column": "konto_id",
   "related": "konto_name",
   "to_form": "konten",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240314084341",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "92",
   "name": "konten_buchungs_algo",
   "column": "Suchtext_0",
   "label": "Suchtext 1",
   "gridlabel": "",
   "seq": "9",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "50",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "93",
   "name": "konten_buchungs_algo",
   "column": "comment",
   "label": "Comment",
   "gridlabel": "",
   "seq": "6",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "200",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "94",
   "name": "konten_buchungs_algo",
   "column": "/f",
   "label": "Logische Bedingung 1",
   "gridlabel": "",
   "seq": "8",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240314084524",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "95",
   "name": "konten_buchungs_algo",
   "column": "suchfelder_0",
   "label": "Suchfelder 1",
   "gridlabel": "",
   "seq": "10",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "radio",
   "pic": "Alle;Buchungstext;Verwendungszwech;An wen/Von wem",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "96",
   "name": "konten_buchungs_algo",
   "column": "/f",
   "label": "Logische Bedingung 2",
   "gridlabel": "",
   "seq": "13",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240314084519",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "97",
   "name": "konten_buchungs_algo",
   "column": "Suchtext_1",
   "label": "Suchtext 2",
   "gridlabel": "",
   "seq": "14",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "50",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "98",
   "name": "konten_buchungs_algo",
   "column": "suchfelder_1",
   "label": "Suchfelder",
   "gridlabel": "Suchfelder 2",
   "seq": "15",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "radio",
   "pic": "Alle;Buchungstext;Verwendungszwech;An wen/Von wem",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "99",
   "name": "konten_buchungs_algo",
   "column": "/",
   "label": "",
   "gridlabel": "",
   "seq": "16",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "100",
   "name": "konten_buchungs_algo",
   "column": "",
   "label": "UND",
   "gridlabel": "",
   "seq": "12",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "label",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240314092448",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "101",
   "name": "konten_buchungs_algo",
   "column": "gegenkonto",
   "label": "Gegen konto",
   "gridlabel": "",
   "seq": "5",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "20",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "102",
   "name": "konten_buchungs_algo",
   "column": "/",
   "label": "",
   "gridlabel": "",
   "seq": "11",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "105",
   "name": "konten_buchungs_algo",
   "column": "/",
   "label": "",
   "gridlabel": "",
   "seq": "7",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "156",
   "name": "konten_buchungs_algo",
   "column": "seq",
   "label": "Folge",
   "gridlabel": "",
   "seq": "18",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240314090739",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "157",
   "name": "konten_buchungs_algo",
   "column": "/f",
   "label": "",
   "gridlabel": "",
   "seq": "17",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240314090739",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "158",
   "name": "konten_buchungs_algo",
   "column": "/",
   "label": "",
   "gridlabel": "",
   "seq": "19",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240314090745",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "106",
   "name": "plattformen",
   "column": "pl",
   "label": "Kode",
   "gridlabel": "",
   "seq": "0",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "*",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "107",
   "name": "plattformen",
   "column": "name",
   "label": "Name",
   "gridlabel": "",
   "seq": "1",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "250",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "108",
   "name": "plattformen",
   "column": "algo",
   "label": "Laden Algorithmus",
   "gridlabel": "",
   "seq": "2",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "radio",
   "pic": "Amazon;eBay;Etsy;Shopify;Easybill;Plenty",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "109",
   "name": "sales",
   "column": "id",
   "label": "",
   "gridlabel": "",
   "seq": "0",
   "nogrid": "*",
   "noform": "*",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "*",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "110",
   "name": "sales",
   "column": "shop_id",
   "label": "Laden",
   "gridlabel": "",
   "seq": "1",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "shops",
   "to_column": "shop_id",
   "related": "name",
   "to_form": "shops",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "111",
   "name": "sales",
   "column": "date",
   "label": "Datum",
   "gridlabel": "",
   "seq": "2",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "date",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "112",
   "name": "sales",
   "column": "betrag",
   "label": "Brutto",
   "gridlabel": "",
   "seq": "4",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "F",
   "datatype": "decimal",
   "datalen": "15",
   "datadec": "2",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240329115812",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "113",
   "name": "sales",
   "column": "kosten",
   "label": "Kosten",
   "gridlabel": "",
   "seq": "6",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "decimal",
   "datalen": "15",
   "datadec": "2",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315151227",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "114",
   "name": "sales",
   "column": "content1",
   "label": "Content 1",
   "gridlabel": "",
   "seq": "8",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "250",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315151226",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "115",
   "name": "sales",
   "column": "mwst",
   "label": "MwSt",
   "gridlabel": "",
   "seq": "7",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "decimal",
   "datalen": "15",
   "datadec": "2",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315151227",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "116",
   "name": "sales",
   "column": "land",
   "label": "Land",
   "gridlabel": "",
   "seq": "11",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "3",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240327091827",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "117",
   "name": "sales",
   "column": "rechnung",
   "label": "R-Nummer",
   "gridlabel": "",
   "seq": "9",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "50",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315151226",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "118",
   "name": "sales",
   "column": "gegenkonto",
   "label": "Gegenkonto",
   "gridlabel": "",
   "seq": "3",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "20",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240314090317",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "119",
   "name": "sales",
   "column": "currency",
   "label": "W\u00e4hrung",
   "gridlabel": "",
   "seq": "12",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "3",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240327091826",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "216",
   "name": "sales",
   "column": "betrag_ist_kosten",
   "label": "Brutto ist kosten",
   "gridlabel": "",
   "seq": "5",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "check",
   "pic": "",
   "datatype": "char",
   "datalen": "1",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315151227",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "217",
   "name": "sales",
   "column": "content2",
   "label": "Content 2",
   "gridlabel": "",
   "seq": "10",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "250",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240327091827",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "120",
   "name": "shops",
   "column": "shop_id",
   "label": "Kode",
   "gridlabel": "",
   "seq": "1",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "*",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "121",
   "name": "shops",
   "column": "pl",
   "label": "Plattform",
   "gridlabel": "",
   "seq": "2",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "plattformen",
   "to_column": "pl",
   "related": "name",
   "to_form": "plattformen",
   "comment": "",
   "code_when": "mem.heap.lapl=mem.s.pl",
   "code_show": "",
   "code_valid": "if mem.heap.lapl != mem.s.pl:\r\n    mem.s.name = get(\"plattformen\", f\"pl={mem.s.pl}\", \"name\")",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "122",
   "name": "shops",
   "column": "name",
   "label": "Name",
   "gridlabel": "",
   "seq": "3",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "250",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "if mem.s.name == \"\":\r\n    mem.s.name = get(\"plattformen\", f\"pl={mem.s.pl}\", \"name\")",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240307220936",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "123",
   "name": "shops",
   "column": "buchung_konto",
   "label": "Buchungskonto",
   "gridlabel": "",
   "seq": "6",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "20",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315151020",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "124",
   "name": "shops",
   "column": "default_gegenkonto",
   "label": "Standard Gegenkonto",
   "gridlabel": "",
   "seq": "7",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "20",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315151019",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "209",
   "name": "shops",
   "column": "kosten_buchung_konto",
   "label": "Buchungskonto",
   "gridlabel": "",
   "seq": "10",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "20",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315151024",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "210",
   "name": "shops",
   "column": "kosten_default_gegenkonto",
   "label": "Standard Gegenkonto",
   "gridlabel": "",
   "seq": "11",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "20",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315151024",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "211",
   "name": "shops",
   "column": "/f",
   "label": "Ums\u00e4tze",
   "gridlabel": "",
   "seq": "5",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315151020",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "212",
   "name": "shops",
   "column": "/",
   "label": "",
   "gridlabel": "",
   "seq": "8",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "",
   "pic": "",
   "datatype": "",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315150958",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "213",
   "name": "shops",
   "column": "/f",
   "label": "Kosten",
   "gridlabel": "",
   "seq": "9",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315151024",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "214",
   "name": "shops",
   "column": "/",
   "label": "",
   "gridlabel": "",
   "seq": "12",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "",
   "pic": "",
   "datatype": "",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315150958",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "215",
   "name": "shops",
   "column": "/",
   "label": "",
   "gridlabel": "",
   "seq": "4",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315151020",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "142",
   "name": "shops_buchungs_algo",
   "column": "id",
   "label": "",
   "gridlabel": "",
   "seq": "1",
   "nogrid": "*",
   "noform": "*",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "*",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315114602",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "143",
   "name": "shops_buchungs_algo",
   "column": "shop_id",
   "label": "Laden",
   "gridlabel": "",
   "seq": "3",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "shops",
   "to_column": "shop_id",
   "related": "name",
   "to_form": "shops",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315114601",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "144",
   "name": "shops_buchungs_algo",
   "column": "gegenkonto",
   "label": "Gegen konto",
   "gridlabel": "",
   "seq": "4",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "20",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315114601",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "145",
   "name": "shops_buchungs_algo",
   "column": "comment",
   "label": "Comment",
   "gridlabel": "",
   "seq": "5",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "200",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315114601",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "146",
   "name": "shops_buchungs_algo",
   "column": "/",
   "label": "",
   "gridlabel": "",
   "seq": "6",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315114601",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "147",
   "name": "shops_buchungs_algo",
   "column": "/f",
   "label": "Logische Bedingung 1",
   "gridlabel": "",
   "seq": "8",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315120444",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "148",
   "name": "shops_buchungs_algo",
   "column": "Suchtext_0",
   "label": "Suchtext 1",
   "gridlabel": "",
   "seq": "9",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "50",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315120444",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "149",
   "name": "shops_buchungs_algo",
   "column": "suchfelder_0",
   "label": "Suchfelder 1",
   "gridlabel": "",
   "seq": "10",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "radio",
   "pic": "Alle;MwSt;Content 1;R-Nummer;Land;W\u00e4hrung",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240326003018",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "150",
   "name": "shops_buchungs_algo",
   "column": "/",
   "label": "",
   "gridlabel": "",
   "seq": "11",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315120444",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "151",
   "name": "shops_buchungs_algo",
   "column": "",
   "label": "UND",
   "gridlabel": "",
   "seq": "12",
   "nogrid": "*",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "label",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315121155",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "152",
   "name": "shops_buchungs_algo",
   "column": "/f",
   "label": "Logische Bedingung 2",
   "gridlabel": "",
   "seq": "13",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315120444",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "153",
   "name": "shops_buchungs_algo",
   "column": "Suchtext_1",
   "label": "Suchtext 2",
   "gridlabel": "",
   "seq": "14",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "50",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315120444",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "154",
   "name": "shops_buchungs_algo",
   "column": "suchfelder_1",
   "label": "Suchfelder",
   "gridlabel": "Suchfelder 2",
   "seq": "15",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "radio",
   "pic": "Alle;MwSt;Content 1;R-Nummer;Land;W\u00e4hrung",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315120444",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "155",
   "name": "shops_buchungs_algo",
   "column": "/",
   "label": "",
   "gridlabel": "",
   "seq": "16",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315120444",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "160",
   "name": "shops_buchungs_algo",
   "column": "seq",
   "label": "Folge",
   "gridlabel": "",
   "seq": "2",
   "nogrid": "",
   "noform": "*",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315114602",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "163",
   "name": "shops_buchungs_algo",
   "column": "",
   "label": "UND",
   "gridlabel": "",
   "seq": "17",
   "nogrid": "*",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "label",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315121205",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "164",
   "name": "shops_buchungs_algo",
   "column": "euland",
   "label": "EU-Mitglied",
   "gridlabel": "",
   "seq": "19",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "radio",
   "pic": "Egal;EU;Nicht-EU",
   "datatype": "int",
   "datalen": "1",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240316001319",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "172",
   "name": "shops_buchungs_algo",
   "column": "/f",
   "label": "",
   "gridlabel": "",
   "seq": "18",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "",
   "pic": "",
   "datatype": "",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240316001319",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "173",
   "name": "shops_buchungs_algo",
   "column": "/",
   "label": "",
   "gridlabel": "",
   "seq": "21",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "",
   "pic": "",
   "datatype": "",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315120444",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "203",
   "name": "shops_buchungs_algo",
   "column": "set_mwst",
   "label": "MwSt festlegen (aus der L\u00e4ndertabelle)",
   "gridlabel": "",
   "seq": "26",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "check",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315120724",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "204",
   "name": "shops_buchungs_algo",
   "column": "/h",
   "label": "Aktionen",
   "gridlabel": "",
   "seq": "23",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240316170140",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "205",
   "name": "shops_buchungs_algo",
   "column": "/",
   "label": "",
   "gridlabel": "",
   "seq": "28",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "",
   "pic": "",
   "datatype": "",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315120724",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "206",
   "name": "shops_buchungs_algo",
   "column": "/v",
   "label": "Logiken",
   "gridlabel": "",
   "seq": "7",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315120450",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "207",
   "name": "shops_buchungs_algo",
   "column": "/",
   "label": "",
   "gridlabel": "",
   "seq": "22",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "",
   "pic": "",
   "datatype": "",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315120444",
   "q2_mode": "i",
   "mess": "",
   "alignment": "0"
  },
  {
   "id": "208",
   "name": "shops_buchungs_algo",
   "column": "set_konto",
   "label": "Konto festlegen (immer, falls angegeben)",
   "gridlabel": "",
   "seq": "24",
   "nogrid": "*",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "*",
   "stretch": "0",
   "tag": "",
   "control": "check",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240315190439",
   "q2_mode": "u",
   "mess": "",
   "alignment": "0"
  }
 ],
 "queries": [
  {
   "name": "day_stand",
   "content": "{\n  \"queries\": {\n    \"new_query\": \"select date\\r\\n    , (select saldo from konten where konto_id=:konto) +saldo as saldo\\r\\n    , (select round(sum(case when betrag>0 then betrag else 0 end ),2)\\r\\n        from bank\\r\\n        where bank.konto_id = :konto and bank.date=qq.date\\r\\n        )  as ein\\r\\n    , (select round(sum(case when betrag<0 then -betrag else 0 end ),2)\\r\\n        from bank\\r\\n        where bank.konto_id = :konto and bank.date=qq.date\\r\\n        )  as aus\\r\\nfrom\\r\\n    (\\r\\n    SELECT date, \\r\\n           round(   SUM(betrag) OVER (order BY date)    ,2) AS saldo\\r\\n    FROM bank\\r\\n    where bank.konto_id = {konto}\\r\\n    ORDER BY date\\r\\n    ) qq\\r\\ngroup by date\",\n    \"month\": \"SELECT \\r\\n    substr(date,1,4) AS year\\r\\n    , substr(date,6,2) AS month\\r\\n    , round(SUM(case when summa<0 then summa else 0 end),2) AS summa_minus\\r\\nFROM bank\\r\\nwhere kr <> 25\\r\\nGROUP BY year, month\\r\\n\",\n    \"sales\": \"select shops.name, land, mwst\\r\\n    , sum(sales.betrag) as betrag\\r\\n    , sum(sales.kosten) as kosten\\nfrom sales, shops\\r\\nwhere sales.shop_id = shops.shop_id\\r\\ngroup by shops.shop_id, land, mwst\",\n    \"111\": \"\\r\\n               select shops.name, land, mwst\\r\\n                    , round(sum(sales.betrag),2) as betrag\\r\\n                    , round(sum(sales.kosten), 2) as kosten\\r\\n                from sales, shops\\r\\n                where sales.shop_id = shops.shop_id\\r\\n                    and date>= '2024-01-01' and date<= {dt}\\r\\n                group by shops.shop_id, land, mwst\\r\\n            \"\n  },\n  \"params\": {\n    \"konto\": \"2\",\n    \"dt\": \"2024-08-30\"\n  }\n}",
   "comment": "",
   "q2_time": "20240307220936",
   "q2_mode": "i"
  }
 ],
 "actions": [
  {
   "id": "27",
   "name": "bank",
   "action_text": "",
   "seq": "0",
   "action_mode": "1",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240307220936",
   "q2_mode": "i"
  },
  {
   "id": "28",
   "name": "bank",
   "action_text": "Gegenkonto festlegen",
   "seq": "2",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "F4",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "import set_gegenkonto_bank\r\nset_gegenkonto_bank(mem.r.konto_id)\r\nmem.refresh()",
   "comment": "",
   "q2_time": "20240314094836",
   "q2_mode": "u"
  },
  {
   "id": "29",
   "name": "bank",
   "action_text": "Total",
   "seq": "1",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "\u2211",
   "action_key": "F2",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "selected_rows = mem.get_grid_selected_rows()\r\ntot = 0\r\nif len(selected_rows) > 1:\r\n    _range = selected_rows\r\nelse:\r\n    _range = range(mem.model.row_count())\r\n\r\n\r\nfor x in _range:\r\n    tot += num(mem.model.get_record(x)[\"betrag\"])\r\n    \r\nq2mess(tot)",
   "comment": "",
   "q2_time": "20240307220936",
   "q2_mode": "i"
  },
  {
   "id": "30",
   "name": "banken",
   "action_text": "",
   "seq": "0",
   "action_mode": "1",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240307220936",
   "q2_mode": "i"
  },
  {
   "id": "31",
   "name": "banken",
   "action_text": "Konten",
   "seq": "1",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "konten",
   "child_where": "bk={bk}",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240307220937",
   "q2_mode": "i"
  },
  {
   "id": "32",
   "name": "country",
   "action_text": "",
   "seq": "0",
   "action_mode": "1",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240307220937",
   "q2_mode": "i"
  },
  {
   "id": "33",
   "name": "konten",
   "action_text": "",
   "seq": "0",
   "action_mode": "1",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240307220937",
   "q2_mode": "i"
  },
  {
   "id": "34",
   "name": "konten",
   "action_text": "Algorithmus",
   "seq": "5",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "A",
   "action_key": "",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "konten_buchungs_algo",
   "child_where": "konto_id={konto_id}",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240307220937",
   "q2_mode": "i"
  },
  {
   "id": "35",
   "name": "konten",
   "action_text": "Import",
   "seq": "2",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "F3",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "if not hasattr(form, \"prev_form\"):\r\n    q2mess('Geh in Ref/Konto, w\u00e4hle eine Konto und mach Actions/Herunterladen!')\r\n    return\r\n\r\n# run_module(\"load_bank\", import_only=True)\r\nimport load_bank\r\nimport q2date\r\n\r\nform_loader = Q2Form(\"Import bank data \")\r\n# form_loader.add_control(\"/f\", \"Herunterladen Bank Data\")\r\n# form_loader.add_control(\"konto_id\", \"Konto\", datatype=\"int\", to_field=\"konto_id\", to_table=\"konten\", related=\"123\", to_form=\"konten\", data=1 )\r\nform_loader.add_control(\"date1\", \"From\", datatype=\"date\", data = const.date1)\r\nform_loader.add_control(\"date2\", \"to\", datatype=\"date\", data = const.date2)\r\n\r\nform_loader.ok_button =1\r\nform_loader.cancel_button =1\r\n\r\nform_loader.run()\r\n\r\nif form_loader.ok_pressed:\r\n    date1 = form_loader.s.date1\r\n    date2 = form_loader.s.date2\r\n    if Loader(date1,date2,form.r.konto_id).run():\r\n        import set_gegenkonto_bank\r\n        set_gegenkonto_bank(mem.r.konto_id)\r\n        mem.refresh()",
   "comment": "",
   "q2_time": "20240314102828",
   "q2_mode": "u"
  },
  {
   "id": "36",
   "name": "konten",
   "action_text": "Kontobewegungen",
   "seq": "4",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "bank",
   "child_where": "konto_id={konto_id}",
   "child_noshow": "",
   "child_copy_mode": "3",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240307220937",
   "q2_mode": "i"
  },
  {
   "id": "37",
   "name": "konten",
   "action_text": "Export",
   "seq": "3",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "F4",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "import q2date\r\nform_loader = Q2Form(\"Export to Agenda CSV\")\r\nform_loader.add_control(\"date1\", \"From\", datatype=\"date\", data = const.date1)\r\nform_loader.add_control(\"date2\", \"to\", datatype=\"date\", data = const.date2)\r\n\r\nform_loader.ok_button =1\r\nform_loader.cancel_button =1\r\n\r\nform_loader.run()\r\n\r\nif form_loader.ok_pressed:\r\n    date1 = form_loader.s.date1\r\n    date2 = form_loader.s.date2\r\n    \r\n    from datetime import datetime\r\n    _date1 = datetime.strptime(date1, \"%Y-%m-%d\").strftime(\"%d.%m.%Y\")\r\n    _date2 = datetime.strptime(date2, \"%Y-%m-%d\").strftime(\"%d.%m.%Y\")\r\n    \r\n    desktop=os.path.expanduser(\"~/Desktop\")\r\n    filename = f\"{desktop}/{mem.r.konto_name} {_date1}-{_date2}.csv\"\r\n    filename = q2_app.get_save_file_dialoq(path=filename, filter = \"*.csv\")[0]\r\n    if filename:\r\n        import csv\r\n        fieldnames  = \"Buchungstag;Buchungstext;Beg\u00fcnstigter / Auftraggeber;Verwendungszweck;Betrag;Soll;Haben;Waehrung;Konto;Gegenkonto\".split(\";\")\r\n        with open(filename, 'w', newline='', encoding = \"utf8\") as csvfile:\r\n            writer = csv.DictWriter(csvfile, fieldnames=fieldnames, delimiter=';')\r\n            writer.writeheader()\r\n            cu = q2cursor(f\"\"\"select * \r\n                                        from bank where konto_id={mem.r.konto_id} \r\n                                            and date>='{date1}' \r\n                                            and date<='{date2}'\r\n                                        order by date\r\n                                    \"\"\")\r\n            \r\n            for row in cu.records():\r\n                csv_row={}\r\n                csv_row[\"Buchungstag\"] = datetime.strptime(row[\"date\"], \"%Y-%m-%d\").strftime(\"%d.%m.%Y\")\r\n                csv_row[\"Buchungstext\"] = row[\"content1\"]\r\n                csv_row[\"Beg\u00fcnstigter / Auftraggeber\"] = row[\"content3\"]\r\n                csv_row[\"Verwendungszweck\"] = row[\"content2\"]\r\n                \r\n                if num(row[\"betrag\"]) >0:\r\n                    default_gegenkonto=mem.r.default_gegenkonto_ein\r\n                else:\r\n                    default_gegenkonto=mem.r.default_gegenkonto_aus\r\n                \r\n                row[\"betrag\"] = row[\"betrag\"].replace(\".\", \",\")\r\n                csv_row[\"Betrag\"] = row[\"betrag\"]\r\n                csv_row[\"Soll\"] = row[\"betrag\"] if num(row[\"betrag\"]) <0 else \"0\"\r\n                csv_row[\"Haben\"] = row[\"betrag\"] if num(row[\"betrag\"]) >0 else \"0\"\r\n                csv_row[\"Waehrung\"] = \"EUR\"\r\n                csv_row[\"Konto\"] = mem.r.buchung_konto\r\n                csv_row[\"Gegenkonto\"] = row[\"gegenkonto\"] if row[\"gegenkonto\"] != \"\" else default_gegenkonto\r\n                writer.writerow(csv_row)",
   "comment": "",
   "q2_time": "20240314084902",
   "q2_mode": "u"
  },
  {
   "id": "38",
   "name": "konten",
   "action_text": "Tagessaldo",
   "seq": "1",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "F2",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "cu=q2cursor(f\"\"\"\r\n                    select date\r\n                        , (select saldo from konten where konto_id={mem.r.konto_id}) +saldo as saldo\r\n                        , (select round(sum(case when betrag>0 then betrag else 0 end ),2)\r\n                            from bank\r\n                            where bank.konto_id = {mem.r.konto_id} and bank.date=qq.date\r\n                            )  as ein\r\n                        , (select round(sum(case when betrag<0 then -betrag else 0 end ),2)\r\n                            from bank\r\n                            where bank.konto_id = {mem.r.konto_id} and bank.date=qq.date\r\n                            )  as aus\r\n                    from\r\n                        (\r\n                        SELECT date, \r\n                               round(   SUM(betrag) OVER (order BY date)    ,2) AS saldo\r\n                        FROM bank\r\n                        where bank.konto_id = {mem.r.konto_id}\r\n                        ORDER BY date\r\n                        ) qq\r\n                    where date >='{const.date1}' and date <='{const.date2}'\r\n                    group by date\r\n                    \r\n\"\"\")\r\n\r\nform=Q2Form(\"Tagessaldo\")\r\nform.add_control(\"date\", \"Datum\", datatype=\"date\", datalen=12)\r\nform.add_control(\"ein\", \"Ein\", datatype=\"dec\", datalen=15, datadec=2, pic=\"F\")\r\nform.add_control(\"aus\", \"Aus\", datatype=\"dec\", datalen=15, datadec=2, pic=\"F\")\r\nform.add_control(\"saldo\", \"Saldo\", datatype=\"dec\", datalen=15, datadec=2, pic=\"F\")\r\nform.set_model(Q2CursorModel(cu))\r\nform.run()",
   "comment": "",
   "q2_time": "20240307220937",
   "q2_mode": "i"
  },
  {
   "id": "39",
   "name": "konten_buchungs_algo",
   "action_text": "",
   "seq": "0",
   "action_mode": "1",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240307220937",
   "q2_mode": "i"
  },
  {
   "id": "40",
   "name": "konten_buchungs_algo",
   "action_text": "Pr\u00fcfen",
   "seq": "1",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "F3",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "import get_such_bank\r\nwhr_text = get_such_bank(mem.r.id) \r\nif whr_text == \"\": \r\n    return \r\nq2cursor(f\"\"\"\r\n                    select date, content1, content2, content3, betrag, gegenkonto \r\n                    from bank \r\n                    where ({whr_text}) and konto_id={mem.r.konto_id}\r\n              \"\"\").browse()",
   "comment": "",
   "q2_time": "20240314094455",
   "q2_mode": "u"
  },
  {
   "id": "41",
   "name": "plattformen",
   "action_text": "",
   "seq": "0",
   "action_mode": "1",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240307220937",
   "q2_mode": "i"
  },
  {
   "id": "42",
   "name": "plattformen",
   "action_text": "L\u00e4den",
   "seq": "1",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "shops",
   "child_where": "pl={pl}",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240307220937",
   "q2_mode": "i"
  },
  {
   "id": "43",
   "name": "sales",
   "action_text": "",
   "seq": "0",
   "action_mode": "1",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240307220937",
   "q2_mode": "i"
  },
  {
   "id": "44",
   "name": "sales",
   "action_text": "Total",
   "seq": "1",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "\u2211",
   "action_key": "F2",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "selected_rows = mem.get_grid_selected_rows()\r\ntot_betrag = 0\r\ntot_kosten = 0\r\nif len(selected_rows) > 1:\r\n    _range = selected_rows\r\nelse:\r\n    _range = range(mem.model.row_count())\r\n\r\n\r\nfor x in _range:\r\n    tot_betrag += num(mem.model.get_record(x)[\"betrag\"])\r\n    tot_kosten += num(mem.model.get_record(x)[\"kosten\"])\r\n    \r\nq2mess(f\"Betrag: <b>{tot_betrag}</b><br>\" \r\n               f\"Kosten: <b>{tot_kosten}</b><br>\")",
   "comment": "",
   "q2_time": "20240307220937",
   "q2_mode": "i"
  },
  {
   "id": "54",
   "name": "sales",
   "action_text": "Gegenkonto festlegen",
   "seq": "2",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "F4",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "import set_gegenkonto_sales\r\nset_gegenkonto_sales(mem.r.shop_id)\r\nmem.refresh()",
   "comment": "",
   "q2_time": "20240314101309",
   "q2_mode": "u"
  },
  {
   "id": "45",
   "name": "shops",
   "action_text": "",
   "seq": "0",
   "action_mode": "1",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240307220937",
   "q2_mode": "i"
  },
  {
   "id": "46",
   "name": "shops",
   "action_text": "Ums\u00e4tze",
   "seq": "3",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "sales",
   "child_where": "shop_id={shop_id}",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240307220937",
   "q2_mode": "i"
  },
  {
   "id": "47",
   "name": "shops",
   "action_text": "Import",
   "seq": "1",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "F3",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "# if not hasattr(form, \"prev_form\"):\r\n    # q2mess('Geh in Ref/Konto, w\u00e4hle eine Konto und mach Actions/Herunterladen!')\r\n    # return\r\n\r\n# run_module(\"load_bank\", import_only=True)\r\nimport load_sales\r\nimport q2date\r\n\r\nform_loader = Q2Form(\"Import sales data \")\r\n# form_loader.add_control(\"/f\", \"Herunterladen Bank Data\")\r\n# form_loader.add_control(\"konto_id\", \"Konto\", datatype=\"int\", to_field=\"konto_id\", to_table=\"konten\", related=\"123\", to_form=\"konten\", data=1 )\r\nform_loader.add_control(\"date1\", \"From\", datatype=\"date\", data = const.date1)\r\nform_loader.add_control(\"date2\", \"to\", datatype=\"date\", data = const.date2)\r\n\r\nform_loader.ok_button =1\r\nform_loader.cancel_button =1\r\n\r\nform_loader.run()\r\n\r\nif form_loader.ok_pressed:\r\n    date1 = form_loader.s.date1\r\n    date2 = form_loader.s.date2\r\n    Loader(date1,date2,form.r.shop_id)\r\n    import set_gegenkonto_sales\r\n    set_gegenkonto_sales(mem.r.shop_id)\r\n    mem.refresh()",
   "comment": "",
   "q2_time": "20240314104418",
   "q2_mode": "u"
  },
  {
   "id": "48",
   "name": "shops",
   "action_text": "Export",
   "seq": "2",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "F4",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "import q2date\r\nform_loader = Q2Form(\"Export to Agenda CSV\")\r\nform_loader.add_control(\"date1\", \"From\", datatype=\"date\", data = const.date1)\r\nform_loader.add_control(\"date2\", \"to\", datatype=\"date\", data = const.date2)\r\n\r\nform_loader.ok_button =1\r\nform_loader.cancel_button =1\r\n\r\nform_loader.run()\r\n\r\nif form_loader.ok_pressed:\r\n    date1 = form_loader.s.date1\r\n    date2 = form_loader.s.date2\r\n    \r\n    from datetime import datetime\r\n    _date1 = datetime.strptime(date1, \"%Y-%m-%d\").strftime(\"%d.%m.%Y\")\r\n    _date2 = datetime.strptime(date2, \"%Y-%m-%d\").strftime(\"%d.%m.%Y\")\r\n    \r\n    desktop=os.path.expanduser(\"~/Desktop\")\r\n    filename = f\"{desktop}/{mem.r.name} {_date1}-{_date2}.csv\"\r\n    ?filename \r\n    filename = q2_app.get_save_file_dialoq(path=filename, filter = \"*.csv\")[0]\r\n    if filename:\r\n        import csv\r\n        cu = q2cursor(f\"\"\"select * \r\n                                    from sales \r\n                                    where shop_id={mem.r.shop_id} \r\n                                        and date>='{date1}' \r\n                                        and date<='{date2}'\r\n                                    order by land, mwst, date\r\n                                \"\"\")\r\n        \r\n        fieldnames  = \"Buchungstag;Buchungstext;Beg\u00fcnstigter / Auftraggeber;Verwendungszweck;Betrag;Soll;Haben;Waehrung;Konto;Gegenkonto\".split(\";\")\r\n        with open(filename, 'w', newline='', encoding = \"utf8\") as csvfile:\r\n            writer = csv.DictWriter(csvfile, fieldnames=fieldnames, delimiter=';')\r\n            writer.writeheader()\r\n            for row in cu.records():\r\n                csv_row={}\r\n                csv_row[\"Buchungstag\"] = datetime.strptime(row[\"date\"], \"%Y-%m-%d\").strftime(\"%d.%m.%Y\")\r\n                csv_row[\"Buchungstext\"] = f'{row[\"content1\"]}'\r\n                csv_row[\"Beg\u00fcnstigter / Auftraggeber\"] = f'{row[\"land\"]}-{row[\"mwst\"]}-{row[\"currency\"]}'\r\n                csv_row[\"Verwendungszweck\"] = row['rechnung']\r\n                \r\n                csv_row[\"Waehrung\"] = \"EUR\"\r\n                # csv_row[\"Soll\"] = row[\"betrag\"] if num(row[\"betrag\"]) < 0 else \"0\"\r\n                # csv_row[\"Haben\"] = row[\"betrag\"] if num(row[\"betrag\"]) > 0 else \"0\"\r\n                if row[\"betrag_ist_kosten\"] == \"\":\r\n                    csv_row[\"Betrag\"] = row[\"betrag\"].replace(\".\", \",\")\r\n                    csv_row[\"Konto\"] = mem.r.buchung_konto\r\n                    csv_row[\"Gegenkonto\"] = row[\"gegenkonto\"] if row[\"gegenkonto\"] != \"\" else mem.r.default_gegenkonto\r\n                else:\r\n                    csv_row[\"Betrag\"] = str(-num(row[\"betrag\"])).replace(\".\", \",\")\r\n                    csv_row[\"Konto\"] = mem.r.kosten_buchung_konto\r\n                    csv_row[\"Gegenkonto\"] = row[\"gegenkonto\"] if row[\"gegenkonto\"] != \"\" else mem.r.kosten_default_gegenkonto\r\n                if csv_row[\"Betrag\"] != \"0\":\r\n                    writer.writerow(csv_row)\r\n                    \r\n                if num(row[\"kosten\"]) !=0:\r\n                    row[\"kosten\"] = str(-num(row[\"kosten\"])).replace(\".\", \",\")\r\n                    csv_row[\"Betrag\"] = row[\"kosten\"]\r\n                    csv_row[\"Konto\"] = mem.r.kosten_buchung_konto\r\n                    csv_row[\"Gegenkonto\"] = row[\"gegenkonto\"] if row[\"gegenkonto\"] != \"\" else mem.r.kosten_default_gegenkonto\r\n                    if csv_row[\"Betrag\"] != \"0\":\r\n                        writer.writerow(csv_row)",
   "comment": "",
   "q2_time": "20240315175917",
   "q2_mode": "u"
  },
  {
   "id": "53",
   "name": "shops",
   "action_text": "Algorithmus",
   "seq": "4",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "A",
   "action_key": "",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "shops_buchungs_algo",
   "child_where": "shop_id={shop_id}",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240314095945",
   "q2_mode": "u"
  },
  {
   "id": "51",
   "name": "shops_buchungs_algo",
   "action_text": "",
   "seq": "0",
   "action_mode": "1",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240314085457",
   "q2_mode": "i"
  },
  {
   "id": "52",
   "name": "shops_buchungs_algo",
   "action_text": "Pr\u00fcfen",
   "seq": "1",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "F3",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "import get_such_sales\r\nwhr_text = get_such_sales(mem.r.id) \r\nif whr_text == \"\": \r\n    return \r\nq2cursor(f\"\"\"\r\n                    select date\r\n                        , gegenkonto\r\n                        , mwst\r\n                        , content1\r\n                        , rechnung\r\n                        , land\r\n                        , currency\r\n                    from sales \r\n                    where ({whr_text}) and shop_id={mem.r.shop_id}\r\n              \"\"\").browse()",
   "comment": "",
   "q2_time": "20240314100922",
   "q2_mode": "u"
  }
 ],
 "reports": [
  {
   "name": "",
   "content": "{\n  \"queries\": {\n    \"new_query\": \"select * from \"\n  },\n  \"params\": {},\n  \"pages\": [\n    {\n      \"columns\": [\n        {\n          \"rows\": [\n            {\n              \"role\": \"free\",\n              \"data_source\": \"\",\n              \"groupby\": \"\",\n              \"table_groups\": [],\n              \"print_when\": \"\",\n              \"print_after\": \"\",\n              \"new_page_before\": \"\",\n              \"new_page_after\": \"\",\n              \"heights\": [\n                \"0-0\"\n              ],\n              \"cells\": {\n                \"0,0\": {\n                  \"style\": {\n                    \"border-width\": \"4 2 4 5\",\n                    \"border-color\": \"palette(Light)\"\n                  },\n                  \"data\": \"234234\"\n                },\n                \"0,2\": {\n                  \"style\": {\n                    \"border-color\": \"palette(Light)\"\n                  }\n                },\n                \"0,1\": {\n                  \"style\": {\n                    \"border-color\": \"palette(Light)\"\n                  },\n                  \"data\": \"cdfvsdvsd\"\n                }\n              }\n            }\n          ],\n          \"widths\": [\n            \"50%\",\n            \"2\",\n            \"0\"\n          ]\n        }\n      ],\n      \"page_width\": 21.0,\n      \"page_height\": 29.0,\n      \"page_margin_left\": 2.0,\n      \"page_margin_top\": 2.0,\n      \"page_margin_right\": 1.0,\n      \"page_margin_bottom\": 2.0\n    }\n  ],\n  \"style\": {\n    \"font-family\": \"Arial\",\n    \"font-size\": \"8pt\",\n    \"font-weight\": \"normal\",\n    \"border-width\": \"0 0 0 0\",\n    \"padding\": \"0.05cm 0.05cm 0.05cm 0.05cm\",\n    \"text-align\": \"left\",\n    \"vertical-align\": \"top\"\n  }\n}",
   "comment": "",
   "q2_time": "20240329214543",
   "q2_mode": "u"
  }
 ],
 "packages": []
}