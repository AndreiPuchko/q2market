{
 "modules": [
  {
   "name": "_test_commerz",
   "script": "path = r\"C:\\Users\\andre\\Desktop\\Lehrmann GmbH\\Sales\\plentyMarkets_AccountBook_2024-1.csv\"\r\n\r\ndef open_csv(filename,  codepage=\"utf8\", delimiter=\",\"):\r\n    import csv\r\n    try:\r\n        with open(filename, encoding=codepage) as csvfile:\r\n            reader = csv.reader(csvfile, delimiter=delimiter)\r\n            return [x for x in reader]\r\n    except Exception as error:\r\n        q2mess(f\"Fehler: {error}\")\r\n        return []\r\n\r\n\r\nfrom datetime import datetime\r\n\r\n\r\n\r\nrez = open_csv(path, delimiter=\";\")\r\nrez0=[]\r\n\r\nfor x in rez[1:3]:\r\n    if x == []:\r\n        continue\r\n    dct={ \r\n            \"shop_id\":  1 ,\r\n            \"date\":   datetime.strptime(x[11][:10], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\"),\r\n            \"content1\": x[14],\r\n            \"betrag\": str(num(x[15].replace(\",\", \".\"))),\r\n            \"kosten\": 0,\r\n            \"mwst\": 0,\r\n            \"land\": x[8]\r\n            }\r\n    rez0.append(dct)\r\n\r\n\r\nq2mess(rez0)",
   "comment": "",
   "last_line": "24",
   "q2_time": "20240304200225",
   "q2_mode": "u"
  },
  {
   "name": "autorun",
   "script": "# run_form(\"bank_af\")\r\n# const.ipath=\"C:\\\\Users\\\\andre\\\\My Drive\\\\Ing\"\r\n# Q2Lines().run()\r\nconst.check(\"date1\", \"Beginn der Arbeitsperiode\", \"2024-01-01\")\r\nconst.check(\"date2\", \"Ende der Arbeitsperiode\", \"2024-01-31\")\r\n\r\n\r\nif myapp.db_data.table(\"banken\").row_count() <=0:\r\n    insert(\"banken\", {\"name\": \"-\"})\r\n    insert(\"banken\", {\"name\": \"Sparkasse\", \"algo\": 1})\r\n    insert(\"banken\", {\"name\": \"Postbank\", \"algo\": 2})\r\n    insert(\"banken\", {\"name\": \"ING\", \"algo\": 3})\r\n    insert(\"banken\", {\"name\": \"PayPal\", \"algo\": 4})\r\n    insert(\"banken\", {\"name\": \"Commerzbank\", \"algo\": 5})\r\n    insert(\"banken\", {\"name\": \"Finom\", \"algo\": 6})\r\n    insert(\"banken\", {\"name\": \"HypoVereinsbank\", \"algo\": 7})\r\n    \r\nif myapp.db_data.table(\"plattformen\").row_count() <=0:\r\n    insert(\"plattformen\", {\"name\": \"-\"})\r\n    insert(\"plattformen\", {\"name\": \"Amazon\", \"algo\": 1})\r\n    insert(\"plattformen\", {\"name\": \"eBay\", \"algo\": 2})\r\n    insert(\"plattformen\", {\"name\": \"Etsy\", \"algo\": 3})\r\n    insert(\"plattformen\", {\"name\": \"Shopify\", \"algo\": 4})\r\n    insert(\"plattformen\", {\"name\": \"Easybill\", \"algo\": 5})\r\n    \r\nif myapp.db_data.table(\"konten\").row_count() <=0:\r\n    insert(\"konten\", {\"konto_name\": \"-\", \"bk\":0})\r\n    \r\nif myapp.db_data.table(\"shops\").row_count() <=0:\r\n    insert(\"shops\", {\"name\": \"-\", \"pl\": 0})",
   "comment": "",
   "last_line": "5",
   "q2_time": "20240305124828",
   "q2_mode": "u"
  },
  {
   "name": "get_such",
   "script": "def get_such(algo_id):\r\n    x = get(\"konten_buchungs_algo\", f\"id = {algo_id}\")\r\n    st0 = x[\"Suchtext_0\"]\r\n    st1 = x[\"Suchtext_1\"]\r\n    \r\n    sf0 = int_(x[\"suchfelder_0\"])\r\n    sf1 = int_(x[\"suchfelder_0\"])\r\n    whr = []\r\n    \r\n    if st0 !=\"\":\r\n        if (sf0 == 1 or sf0 == 2):\r\n            whr.append(f\"content1 like '%{st0}%'\")\r\n        if (sf0 == 1 or sf0 == 3):\r\n            whr.append(f\"content2 like '%{st0}%'\")\r\n        if (sf0 == 1 or sf0 == 4):\r\n            whr.append(f\"content3 like '%{st0}%'\")\r\n    \r\n    if st1 !=\"\":\r\n        if (sf1 == 1 or sf1 == 2):\r\n            whr.append(f\"content1 like '%{st1}%'\")\r\n        if (sf1 == 1 or sf1 == 3):\r\n            whr.append(f\"content2 like '%{st1}%'\")\r\n        if (sf1 == 1 or sf1 == 4):\r\n            whr.append(f\"content3 like '%{st1}%'\")\r\n    if len(whr) == 0:\r\n        return \"\"\r\n    whr_text = \" or \".join(whr)\r\n    return whr_text\r\n        \r\nif __name__ == \"__main__\":\r\n    q2mess(get_such(3))",
   "comment": "",
   "last_line": "30",
   "q2_time": "20240227215210",
   "q2_mode": "u"
  },
  {
   "name": "load_bank",
   "script": "class Loader():\r\n    def __init__(self, date1, date2, konto_id):\r\n        self.date1=date1\r\n        self.date2=date2\r\n        self.konto_id = int_(konto_id)\r\n        bk = get(\"konten\",  f\"konto_id={konto_id}\", \"bk\")\r\n        self.algo = int_(get(\"banken\",  f\"bk={bk}\", \"banken.algo\"))\r\n        self.algo_name = get(\"banken\",  f\"bk={bk}\", \"name\")\r\n\r\n    def run(self):\r\n        if self.algo == 3:\r\n            ext = \"*.pdf\"\r\n        else:\r\n            ext = \"*.csv\"\r\n\r\n        # downloads_path = os.path.expanduser(\"~/Downloads\")\r\n        downloads_path = \"\"\r\n        # self.filename = q2_app.get_open_file_dialoq(\"Open CSV\", downloads_path, ext)[0]\r\n        self.filename = q2_app.get_open_file_dialoq(f\"Open CSV ({self.algo_name})\", downloads_path, ext)[0]\r\n        if not self.filename:\r\n            return\r\n        rez = None\r\n        if self.algo == 1:\r\n            rez = self.algo_1()\r\n        elif self.algo == 2:\r\n            rez = self.algo_2()\r\n        elif self.algo == 3:\r\n            rez = self.algo_3()\r\n        elif self.algo == 4:\r\n            rez = self.algo_4()\r\n        elif self.algo == 5:\r\n            rez = self.algo_5()\r\n        elif self.algo == 6:\r\n            rez = self.algo_6()\r\n        elif self.algo == 7:\r\n            rez = self.algo_7()\r\n\r\n        if rez:\r\n            self.insert_bank(rez)\r\n            return True\r\n        return None\r\n\r\n    def insert_bank(self, bank_data):\r\n        bank_data = [row for row in bank_data if row[\"date\"] >= self.date1 or row[\"date\"] <= self.date2]\r\n        if len(bank_data) == 0:\r\n            return\r\n        # schon_da = q2cursor(f\"select * from bank where date>='{self.date1}' and date<='{self.date2}' and konto_id={self.konto_id}\").row_count()\r\n        q2cursor(f\"delete from bank where date>='{self.date1}' and date<='{self.date2}' and konto_id={self.konto_id}\")\r\n        \r\n        w = q2_wait(len(bank_data), \"Inserting rows\")\r\n        transaction()\r\n        for x in bank_data:\r\n            w.step(10)\r\n            if not insert(\"bank\", x):\r\n                q2mess(\"An error occurred while inserting bank data.\")\r\n                ?q2app.q2_app.db_data.last_sql_error\r\n                break\r\n        commit()\r\n        w.close()\r\n\r\n\r\n    def open_csv(self, codepage=\"utf8\", key_string=None, delimiter=\",\"):\r\n        import csv\r\n        try:\r\n            with open(self.filename, encoding=codepage) as csvfile:\r\n                first_line=csvfile.readline()\r\n                if  key_string not in first_line:\r\n                    q2mess(f\"\"\"<font color=red>Falche Datei </font>\r\n                            <br><b>{self.filename}</b>\r\n                            <br>(nicht <b>{self.algo_name}</b>)\r\n                            <br>kein \"{key_string}\"\r\n                            <br>\r\n                            <br> in die erste linie\r\n                            <br>\r\n                            <br>{first_line}\"\"\")\r\n                    return []\r\n                csvfile.seek(0, 0)\r\n                reader = csv.reader(csvfile, delimiter=delimiter)\r\n                return [x for x in reader]\r\n        except Exception as error:\r\n            q2mess(f\"Fehler: {error}\")\r\n            return []\r\n    \r\n\r\n    def algo_1(self): # Sparkasse\r\n        import csv\r\n        from datetime import datetime\r\n\r\n        csvfile = open(self.filename, encoding=\"cp1252\")\r\n        reader = csv.reader(csvfile, delimiter=\";\")\r\n        rez = [x for x in reader]\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id ,\r\n                    \"date\":  datetime.strptime(x[1].split(\" \")[0], \"%d.%m.%y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[3],\r\n                    \"content2\": x[4],\r\n                    \"content3\": x[11],\r\n                    \"betrag\": x[14].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n    \r\n    def algo_2(self):  # Postbank\r\n        import csv\r\n        from io import StringIO\r\n        from datetime import datetime\r\n\r\n        csvfile = open(self.filename, encoding=\"utf-8\")\r\n        newfile = StringIO()\r\n\r\n        newfile.write(\r\n            (\r\n                \"\\n\".join(\r\n                    [row for index, row in enumerate(csvfile.read().split(\"\\n\")) if index > 7][:-2]\r\n                )\r\n            )\r\n        )\r\n\r\n        newfile.seek(0)\r\n        reader = csv.reader(newfile, delimiter=\";\")\r\n        rez = [x for x in reader]\r\n\r\n        rez0=[]\r\n        for x in rez[2:-2]:\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id ,\r\n                    \"date\":  datetime.strptime(x[0].split(\" \")[0], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[2],\r\n                    \"content2\": x[3],\r\n                    \"content3\": x[4],\r\n                    \"betrag\": x[11].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n\r\n    def algo_3(self):  # ING\r\n        rez=[]\r\n        rez0=[]\r\n        import pdfplumber\r\n        from datetime import datetime\r\n        with pdfplumber.open(self.filename) as pdf:\r\n            for page in pdf.pages:\r\n                page=page.crop((30,0,page.width, page.height))\r\n                for s in page.extract_text().split(\"\\n\"):\r\n                    if re.match(\"\\d{2}\\.\\d{2}\\.\\d{4}\", s):\r\n                        rez.append(s)\r\n        for x in range(0, len(rez), 2):\r\n            rez0.append([rez[x], rez[x+1]])\r\n        rez=[]\r\n        for x in rez0:\r\n            summa =  str(num(x[0].strip().split(\" \")[-1].replace(\".\", \"\").replace(\",\", \".\")))\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id ,\r\n                    \"content1\": \" \".join(x[0].split(\" \")[2:-1]),\r\n                    \"content2\": \" \".join(x[1].split(\" \")[1:]),\r\n                    \"date\":  datetime.strptime(x[0].split(\" \")[0], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"betrag\": summa,\r\n                    }\r\n            rez.append(dct)\r\n        return rez\r\n\r\n    def algo_4(self): # PayPal\r\n        from datetime import datetime\r\n        rez =self.open_csv(codepage=\"utf8\"\r\n                        , key_string='\"Datum\",\"Uhrzeit\",\"Zeitzone\",\"Name\",\"Typ\",\"Status\",\"W\u00e4hrung\",\"Brutto\",\"Geb\u00fchr\"'\r\n                        , delimiter=\",\")\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            if x == []:\r\n                continue\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id,\r\n                    \"date\":  datetime.strptime(x[0], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[10],\r\n                    \"content2\": x[11],\r\n                    \"content3\": x[37],\r\n                    \"betrag\": x[7].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    }\r\n            rez0.append(dct)\r\n            gebuhr = num(x[8].replace(\".\", \"\").replace(\",\", \".\"))\r\n            if gebuhr !=0:\r\n                dct0 = dict(dct)\r\n                dct0['betrag'] = str(gebuhr)\r\n                rez0.append(dct0)\r\n        return rez0\r\n\r\n    def algo_5(self): # Kommerz\r\n        from datetime import datetime\r\n        rez =self.open_csv(codepage=\"utf8\"\r\n                        , key_string='Buchungstag;Wertstellung;Umsatzart;Buchungstext;Betrag;W\u00e4hrung;Auftraggeberkonto;Bankleitzahl'\r\n                        , delimiter=\";\")\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            if x == []:\r\n                continue\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id,\r\n                    \"date\":  datetime.strptime(x[0], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[2],\r\n                    \"content2\": x[3],\r\n                    \"content3\": \"\",\r\n                    \"betrag\": x[4].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n\r\n    def algo_6(self): # Finom\r\n        from datetime import datetime\r\n        rez =self.open_csv(codepage=\"utf8\"\r\n                        , key_string='Buchungsdatum,Time completed,Status,Transaktionsart,Auftraggeber/Empf\u00e4nger,Counterparty BIC'\r\n                        , delimiter=\",\")\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            if x == []:\r\n                continue\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id,\r\n                    \"date\":  datetime.strptime(x[0], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[4],\r\n                    \"content2\": x[7],\r\n                    \"content3\": \"\",\r\n                    \"betrag\": x[12].replace(\",\", \"\"),\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n\r\n    def algo_7(self): # HypoVereinsbank\r\n        from datetime import datetime\r\n        rez =self.open_csv(codepage=\"utf-16-le\"\r\n                        , key_string='Kontonummer;Buchungsdatum;Valuta;Empfaenger 1;Empfaenger 2;Verwendungszweck;Betrag;Waehrung'\r\n                        , delimiter=\";\")\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            if x == []:\r\n                continue\r\n            dct={ \r\n                    \"konto_id\":  self.konto_id,\r\n                    \"date\":  datetime.strptime(x[1], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[5],\r\n                    \"content2\":  \"\",\r\n                    \"content3\": \"\",\r\n                    \"betrag\": x[6].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n\r\n            \r\nif __name__ == \"__main__\":\r\n    # Loader(\"2023-01-01\", \"2023-12-31\", 1)\r\n    # Loader(\"2023-01-01\", \"2023-12-31\", 2)\r\n    # Loader(\"2023-01-01\", \"2023-12-31\", 2)\r\n    pass",
   "comment": "",
   "last_line": "84",
   "q2_time": "20240305132446",
   "q2_mode": "u"
  },
  {
   "name": "load_sales",
   "script": "class Loader():\r\n    def __init__(self, date1, date2, shop_id):\r\n        self.date1=date1\r\n        self.date2=date2\r\n        self.shop_id = int_(shop_id)\r\n        pl = get(\"shops\",  f\"shop_id={shop_id}\", \"pl\")\r\n        self.algo = int_(get(\"plattformen\",  f\"pl={pl}\", \"algo\"))\r\n        self.algo_name = get(\"plattformen\",  f\"pl={pl}\", \"name\")\r\n        self.run()\r\n\r\n    def run(self):\r\n        ext = \"*.csv\"\r\n\r\n        downloads_path = os.path.expanduser(\"~/Downloads\")\r\n        downloads_path = \"\"\r\n        self.filename = q2_app.get_open_file_dialoq(f\"Open CSV ({self.algo_name})\", downloads_path, ext)[0]\r\n        # self.filename  = r\"C:\\Users\\andre\\Desktop\\Lehrmann GmbH\\Sales\\AMAZON 491419019786.csv\"\r\n        if not self.filename:\r\n            return\r\n        rez = None\r\n        if self.algo == 1:\r\n            rez = self.algo_1()\r\n        elif self.algo == 2:\r\n            rez = self.algo_2()\r\n        elif self.algo == 3:\r\n            rez = self.algo_3()\r\n        elif self.algo == 4:\r\n            rez = self.algo_4()\r\n        elif self.algo == 5:\r\n            rez = self.algo_5()\r\n        elif self.algo == 6:\r\n            rez = self.algo_6()\r\n        # elif self.algo == 7:\r\n            # rez = self.algo_7()\r\n\r\n        if rez is not None:\r\n            self.insert_sales(rez)\r\n\r\n    def insert_sales(self, sales_data):\r\n        sales_data = [row for row in sales_data if row[\"date\"] >= self.date1 or row[\"date\"] <= self.date2]\r\n        if len(sales_data) == 0:\r\n            return\r\n        q2cursor(f\"delete from sales where date>='{self.date1}' and date<='{self.date2}' and shop_id={self.shop_id}\")\r\n        \r\n        w = q2_wait(len(sales_data), \"Inserting rows\")\r\n        transaction()\r\n        for x in sales_data:\r\n            w.step(1000)\r\n            if not insert(\"sales\", x):\r\n                q2mess(\"An error occurred while inserting sales data.\")\r\n                ?q2app.q2_app.db_data.last_sql_error\r\n                break\r\n        commit()\r\n        w.close()\r\n    \r\n    def open_csv(self, codepage=\"utf8\", key_string=None, delimiter=\",\"):\r\n        import csv\r\n        try:\r\n            with open(self.filename, encoding=codepage) as csvfile:\r\n                first_line=csvfile.readline()\r\n                if  key_string not in first_line:\r\n                    q2mess(f\"\"\"<font color=red>Falche Datei </font>\r\n                            <br><b>{self.filename}</b>\r\n                            <br>(nicht <b>{self.algo_name}</b>)\r\n                            <br>kein \"{key_string}\"\r\n                            <br>\r\n                            <br> in die erste linie\r\n                            <br>\r\n                            <br>{first_line}\"\"\")\r\n                    return []\r\n                csvfile.seek(0, 0)\r\n                reader = csv.reader(csvfile, delimiter=delimiter)\r\n                return [x for x in reader]\r\n        except Exception as error:\r\n            q2mess(f\"Fehler: {error}\")\r\n            return []\r\n    \r\n    def algo_1(self): # AMAZON\r\n        from datetime import datetime\r\n        rez = self.open_csv(codepage=\"utf8\",\r\n                                    key_string='DRESS\",\"SUPPLIER_NAME\",\"SUPPLIER_VAT_NUMBER\",\"TAX_REPORTING_SCHEME\",\"TAX_COLLECTION_RESPONSIBILITY\"',\r\n                                    delimiter=\",\"\r\n                                    )\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            dct={ \r\n                    \"shop_id\":  self.shop_id ,\r\n                    \"date\":   datetime.strptime(x[11], \"%d-%m-%Y\").strftime(\"%Y-%m-%d\"),\r\n                    \"content1\": x[14],\r\n                    \"betrag\": str(num(x[45].replace(\"\u20ac\", \"\"))),\r\n                    \"kosten\": str(num(x[48])),\r\n                    \"mwst\": str(num(x[30])*100),\r\n                    \"rechnung\": x[82],\r\n                    \"land\": x[79]\r\n                    }\r\n            if num(dct[\"betrag\"])!=0 or num(dct[\"kosten\"])!=0:\r\n                rez0.append(dct)\r\n        return rez0\r\n    \r\n    def algo_2(self): # ebay\r\n        from datetime import datetime\r\n        rez = self.open_csv(codepage=\"utf8\",\r\n                                    key_string=',--,--,--,--,--,--,--,--,--,-',\r\n                                    delimiter=\";\"\r\n                                    )\r\n        rez0=[]\r\n        for x in rez[12:]:\r\n            kosten = num(x[27].replace(\".\", \"\").replace(\",\", \".\"))\r\n            kosten += num(x[28].replace(\".\", \"\").replace(\",\", \".\"))\r\n            kosten += num(x[29].replace(\".\", \"\").replace(\",\", \".\"))\r\n            kosten += num(x[30].replace(\".\", \"\").replace(\",\", \".\"))\r\n            kosten += num(x[31].replace(\".\", \"\").replace(\",\", \".\"))\r\n            kosten  = str(-kosten)\r\n            \r\n            dct={ \r\n                    \"shop_id\":  self.shop_id ,\r\n                    \"date\":  datetime.strptime(x[0], \"%d. %b %Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[19],\r\n                    \"betrag\": x[32].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    \"kosten\": kosten,\r\n                    \"mwst\": x[26].replace(\"%\", \"\"),\r\n                    \"rechnung\": x[2],\r\n                    \"land\": x[9],\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n\r\n    def algo_3(self): # etsy\r\n        import locale\r\n        from datetime import datetime\r\n       \r\n        lc = locale.setlocale(locale.LC_TIME)\r\n        locale.setlocale(locale.LC_TIME, \"de_DE\")\r\n\r\n        rez = self.open_csv(codepage=\"utf8\",\r\n                                    key_string='Datum,Art,Titel,Info,W\u00e4hrung,Betrag,\"Geb\u00fchren & Steuern\",Netto,\"Steuerliche Angaben\"',\r\n                                    delimiter=\",\"\r\n                                    )\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            dct={ \r\n                    \"shop_id\":  self.shop_id ,\r\n                    \"date\":  datetime.strptime(x[0], \"%d. %B %Y\").strftime(\"%Y-%m-%d\") ,\r\n                    \"content1\": x[2],\r\n                    \"betrag\": str(num(x[5].replace(\"\u20ac\", \"\"))),\r\n                    \"kosten\": str(-num(x[6].replace(\"\u20ac\", \"\"))),\r\n                    \"mwst\": 0,\r\n                    \"rechnung\": x[3][:50],\r\n                    \"land\": \"\"\r\n                    }\r\n            rez0.append(dct)\r\n        locale.setlocale(locale.LC_TIME, lc)\r\n        return rez0\r\n    \r\n    def algo_4(self): # shopify\r\n        from datetime import datetime\r\n\r\n        rez = self.open_csv(codepage=\"utf8\",\r\n                                    key_string='Name,Email,Financial Status,Paid at,Fulfillment Status,Fulfilled at,Accepts Marketing,Currency,Subtotal,Shipping,Taxes,Total,Discount Code,Discount Amount,Shipp',\r\n                                    delimiter=\",\"\r\n                                    )\r\n        rez0=[]\r\n        for x in rez[1:]:\r\n            if x[3] == \"\":\r\n                continue\r\n            dct={ \r\n                    \"shop_id\":  self.shop_id ,\r\n                    \"date\":  x[3][:10],\r\n                    \"content1\": x[17],\r\n                    \"betrag\": x[11],\r\n                    \"kosten\": 0,\r\n                    \"mwst\": 19 if x[42] == \"DE\" else 0,\r\n                    \"rechnung\": x[0],\r\n                    \"land\": x[42]\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n        \r\n    def algo_5(self): # easybill\r\n        from datetime import datetime\r\n        rez = self.open_csv(codepage=\"cp1252\",\r\n                                    key_string='EXTF\";700;21;\"Buchungsstapel\"',\r\n                                    delimiter=\";\"\r\n                                    )\r\n        rez0=[]\r\n        for x in rez[3:]:\r\n            if x == []:\r\n                continue\r\n            dct={ \r\n                    \"shop_id\":  self.shop_id ,\r\n                    \"date\":  datetime.strptime(x[116], \"%d%m%Y\").strftime(\"%Y-%m-%d\"),\r\n                    \"content1\": x[13],\r\n                    \"betrag\": x[0].replace(\".\", \"\").replace(\",\", \".\"),\r\n                    \"kosten\": 0,\r\n                    \"mwst\": 19 if x[39][:2] == \"DE\" else 0,\r\n                    \"land\": x[39][:2]\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n        \r\n    def algo_6(self): # plenty\r\n        from datetime import datetime\r\n        rez = self.open_csv(codepage=\"utf8\",\r\n                                    key_string='Belegnummer;Order ID;Soll-Haben;Kunde ID;Kunde;Firma;Vor',\r\n                                    delimiter=\";\"\r\n                                    )\r\n        rez0=[]\r\n        for x in rez[3:]:\r\n            if x == []:\r\n                continue\r\n            dct={ \r\n                    \"shop_id\":  self.shop_id ,\r\n                    \"date\":   datetime.strptime(x[11][:10], \"%d.%m.%Y\").strftime(\"%Y-%m-%d\"),\r\n                    \"content1\": \"\",\r\n                    \"betrag\": str(num(x[15].replace(\",\", \".\"))),\r\n                    \"kosten\": 0,\r\n                    \"mwst\": 0,\r\n                    \"rechnung\": x[0],\r\n                    \"land\": x[8]\r\n                    }\r\n            rez0.append(dct)\r\n        return rez0\r\n    \r\nif __name__ == \"__main__\":\r\n    Loader(\"2024-01-01\", \"2024-02-29\", 6)\r\n    pass",
   "comment": "",
   "last_line": "93",
   "q2_time": "20240305134441",
   "q2_mode": "u"
  },
  {
   "name": "manifest",
   "script": "myapp.app_title = \"VorBuchhaltung\"\nmyapp.app_description = (\"Die Anwendung ist eine integrierte Plattform, \" \r\n                                    \"die einen automatisierten Prozess f\u00fcr den Import \"\r\n                                    \" von Verkaufsberichten aus verschiedenen \"\r\n                                    \"Online-Handelsplattformen sowie Banktransaktionsdaten \"\r\n                                    \"in eine einzige Informationsdatenbank bietet.\")\nmyapp.app_url = \"https://raw.githubusercontent.com/AndreiPuchko/q2market/main/vorbuchhaltung_app\"",
   "comment": "",
   "last_line": "8",
   "q2_time": "20240227205547",
   "q2_mode": "u"
  },
  {
   "name": "on_new_tab",
   "script": "",
   "comment": "",
   "last_line": "1",
   "q2_time": "20240227175037",
   "q2_mode": "i"
  },
  {
   "name": "plot",
   "script": "diver = 1\r\n\r\ncu = q2cursor(f\"\"\"\r\n    select  \r\n        abs(round(sum(summa),0)) as summa\r\n        , kosten.name as name\r\n    from bank, kosten \r\n    where bank.kr=kosten.kr and summa<0\r\n    group by kosten.kr\r\n    order by sum(summa)\r\n    \"\"\")\r\n\r\ncountries = [x['name'][:10] for x in cu.records()]\r\nprofit = [num(x['summa']) for x in cu.records()]\r\n    \r\nimport matplotlib.pyplot as plt\r\n\r\nfig, ax = plt.subplots()\r\n\r\nax.pie(profit, labels=countries)\r\n\r\nplt.show()\r\ncu.browse()",
   "comment": "",
   "last_line": "23",
   "q2_time": "20240227175037",
   "q2_mode": "i"
  },
  {
   "name": "q2date",
   "script": "class q2date:\r\n    def __init__(self, isostring):\r\n        self.date = str(isostring)\r\n    def first_day_of_month(self):\r\n        return f\"{self.date[:7]}-01\"\r\n    def last_day_of_month(self):\r\n        import calendar\r\n        day = calendar.monthrange(int_(self.year()), int_(self.month()))[1]\r\n        return f\"{self.date[:7]}-{day}\"\r\n    def year(self):\r\n        return self.date[:4]\r\n    def month(self):\r\n        return self.date[5:7]",
   "comment": "",
   "last_line": "13",
   "q2_time": "20240227175038",
   "q2_mode": "i"
  },
  {
   "name": "set_gegenkonto",
   "script": "def set_gegenkonto():\r\n    import get_such\r\n    cu = q2cursor(\"\"\"\r\n                                select * from konten_buchungs_algo\r\n                            \"\"\")\r\n    w = q2_wait(cu.row_count(), \"Gegenkonto suchung\")\r\n    for x in cu.records():\r\n        w.step()\r\n        whr_text = get_such(x['id'])\r\n        if whr_text == \"\":\r\n            return\r\n        for row in q2cursor(f\"select * from bank where ({whr_text}) and konto_id={x['konto_id']} and gegenkonto=''\").records():\r\n        # for row in q2cursor(f\"select * from bank where ({whr_text}) and konto_id={x['konto_id']}\").records():\r\n            row['gegenkonto'] = x['gegenkonto']\r\n            update(\"bank\", row)\r\n    w.close()\r\n\r\nif __name__ == \"__main__\":\r\n    set_gegenkonto()",
   "comment": "",
   "last_line": "19",
   "q2_time": "20240227175038",
   "q2_mode": "i"
  },
  {
   "name": "version",
   "script": "self.app_version = '2024-03-05 20:36:59'",
   "comment": "",
   "last_line": "0",
   "q2_time": "20240305203659",
   "q2_mode": "u"
  }
 ],
 "forms": [
  {
   "name": "bank",
   "title": "Kontobewebung",
   "seq": "6",
   "menu_path": "",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "bank",
   "form_table_sort": "date",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240227212740",
   "q2_mode": "u"
  },
  {
   "name": "bank_af",
   "title": "Kontobewebungen filter",
   "seq": "7",
   "menu_path": "Daten",
   "menu_text": "Kontobewebungen",
   "menu_before": "",
   "menu_icon": "\ud83d\udcb8",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "*",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "auto_filter(\"bank\", mem)",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "mem.s.date1=const.date1\r\nmem.s.date2 = const.date2",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240305101545",
   "q2_mode": "u"
  },
  {
   "name": "banken",
   "title": "Banken",
   "seq": "1",
   "menu_path": "Ref",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "banken",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240227175038",
   "q2_mode": "i"
  },
  {
   "name": "berichte_sales",
   "title": "Ums\u00e4tze bericht",
   "seq": "10",
   "menu_path": "Berichte",
   "menu_text": "Ums\u00e4tze",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "",
   "ok_button": "*",
   "cancel_button": "*",
   "view_action": "",
   "form_table": "",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "import q2date\r\nmem.s.date1=const.date1\r\nmem.s.date2 = const.date2",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "q2cursor(f\"\"\"\r\n               select shops.name, land, mwst\r\n                    , round(sum(sales.betrag),2) as betrag\r\n                    , round(sum(sales.kosten), 2) as kosten\r\n                from sales, shops\r\n                where sales.shop_id = shops.shop_id\r\n                    and date>= '{mem.s.date1}' and date<= '{mem.s.date2}'\r\n                group by shops.shop_id, land, mwst\r\n            \"\"\").browse()\r\nreturn False",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240305101413",
   "q2_mode": "u"
  },
  {
   "name": "konten",
   "title": "Konten",
   "seq": "2",
   "menu_path": "Ref",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "*",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "konten",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240305101439",
   "q2_mode": "u"
  },
  {
   "name": "konten_buchungs_algo",
   "title": "Buchung Algorithmus",
   "seq": "3",
   "menu_path": "",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "konten_buchungs_algo",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240227175038",
   "q2_mode": "i"
  },
  {
   "name": "plattformen",
   "title": "Plattformen",
   "seq": "4",
   "menu_path": "Ref",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "*",
   "toolbar": "",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "plattformen",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240227214508",
   "q2_mode": "u"
  },
  {
   "name": "sales",
   "title": "Ums\u00e4tze",
   "seq": "8",
   "menu_path": "",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "sales",
   "form_table_sort": "date",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240228143214",
   "q2_mode": "u"
  },
  {
   "name": "sales_af",
   "title": "Ums\u00e4tze filter",
   "seq": "9",
   "menu_path": "Daten",
   "menu_text": "Ums\u00e4tze",
   "menu_before": "",
   "menu_icon": "\u2655",
   "menu_tiptext": "",
   "menu_separator": "*",
   "toolbar": "*",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "auto_filter(\"sales\", mem)",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "mem.s.date1=const.date1\r\nmem.s.date2 = const.date2",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240305101552",
   "q2_mode": "u"
  },
  {
   "name": "shops",
   "title": "L\u00e4den",
   "seq": "5",
   "menu_path": "Ref",
   "menu_text": "",
   "menu_before": "",
   "menu_icon": "",
   "menu_tiptext": "",
   "menu_separator": "",
   "toolbar": "*",
   "ok_button": "",
   "cancel_button": "",
   "view_action": "",
   "form_table": "shops",
   "form_table_sort": "",
   "comment": "",
   "before_form_build": "",
   "before_grid_build": "",
   "before_grid_show": "",
   "after_grid_show": "",
   "before_form_show": "",
   "after_form_show": "",
   "before_crud_save": "",
   "after_crud_save": "",
   "before_delete": "",
   "after_delete": "",
   "form_valid": "",
   "form_refresh": "",
   "after_form_closed": "",
   "q2_time": "20240305101425",
   "q2_mode": "u"
  }
 ],
 "lines": [
  {
   "id": "1",
   "name": "bank",
   "column": "id",
   "label": "Id",
   "gridlabel": "",
   "seq": "1",
   "nogrid": "*",
   "noform": "*",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "*",
   "ai": "*",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175038",
   "q2_mode": "i"
  },
  {
   "id": "2",
   "name": "bank",
   "column": "date",
   "label": "Buchungstag",
   "gridlabel": "",
   "seq": "3",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "date",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175038",
   "q2_mode": "i"
  },
  {
   "id": "3",
   "name": "bank",
   "column": "content1",
   "label": "Umzatzart",
   "gridlabel": "",
   "seq": "4",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "250",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175038",
   "q2_mode": "i"
  },
  {
   "id": "4",
   "name": "bank",
   "column": "content3",
   "label": "An wen/Von wem",
   "gridlabel": "",
   "seq": "7",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "250",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175038",
   "q2_mode": "i"
  },
  {
   "id": "5",
   "name": "bank",
   "column": "betrag",
   "label": "Betrag",
   "gridlabel": "",
   "seq": "9",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "dec",
   "datalen": "15",
   "datadec": "2",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175038",
   "q2_mode": "i"
  },
  {
   "id": "6",
   "name": "bank",
   "column": "content2",
   "label": "Verwendungszweck",
   "gridlabel": "",
   "seq": "5",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "250",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175038",
   "q2_mode": "i"
  },
  {
   "id": "7",
   "name": "bank",
   "column": "konto_id",
   "label": "Konto",
   "gridlabel": "",
   "seq": "2",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "konten",
   "to_column": "konto_id",
   "related": "konto_name",
   "to_form": "konten",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175038",
   "q2_mode": "i"
  },
  {
   "id": "8",
   "name": "bank",
   "column": "gegenkonto",
   "label": "Gegenkonto",
   "gridlabel": "",
   "seq": "10",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "20",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175038",
   "q2_mode": "i"
  },
  {
   "id": "9",
   "name": "banken",
   "column": "bk",
   "label": "Kode",
   "gridlabel": "",
   "seq": "0",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "*",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175038",
   "q2_mode": "i"
  },
  {
   "id": "10",
   "name": "banken",
   "column": "name",
   "label": "Name",
   "gridlabel": "",
   "seq": "1",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "250",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175038",
   "q2_mode": "i"
  },
  {
   "id": "11",
   "name": "banken",
   "column": "algo",
   "label": "Laden Algorithmus",
   "gridlabel": "",
   "seq": "2",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "radio",
   "pic": "Sparkasse;Postbank;ING;PayPal;Commerzbank;Finom;HypoVereinsbank",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227212220",
   "q2_mode": "u"
  },
  {
   "id": "51",
   "name": "berichte_sales",
   "column": "date1",
   "label": "Von",
   "gridlabel": "",
   "seq": "0",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "date",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240305101032",
   "q2_mode": "u"
  },
  {
   "id": "52",
   "name": "berichte_sales",
   "column": "date2",
   "label": "bis",
   "gridlabel": "",
   "seq": "1",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "date",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240305101038",
   "q2_mode": "u"
  },
  {
   "id": "12",
   "name": "konten",
   "column": "bk",
   "label": "Bank",
   "gridlabel": "",
   "seq": "3",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "banken",
   "to_column": "bk",
   "related": "name",
   "to_form": "banken",
   "comment": "",
   "code_when": "mem.heap.labk = mem.s.bk",
   "code_show": "",
   "code_valid": "if mem.heap.labk != mem.s.bk:\r\n    mem.s.konto_name = get(\"banken\", f\"bk={mem.s.bk}\", \"name\")",
   "q2_time": "20240228164000",
   "q2_mode": "u"
  },
  {
   "id": "13",
   "name": "konten",
   "column": "konto_name",
   "label": "Kontonummer",
   "gridlabel": "",
   "seq": "4",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "200",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "if mem.s.konto_name == \"\":\r\n    mem.s.konto_name = get(\"banken\", f\"bk={mem.s.bk}\", \"name\")",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240304140110",
   "q2_mode": "u"
  },
  {
   "id": "14",
   "name": "konten",
   "column": "buchung_konto",
   "label": "Buchungskonto",
   "gridlabel": "",
   "seq": "6",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "20",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "15",
   "name": "konten",
   "column": "iban",
   "label": "IBAN",
   "gridlabel": "",
   "seq": "5",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "50",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "16",
   "name": "konten",
   "column": "details",
   "label": "Details",
   "gridlabel": "",
   "seq": "10",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "text",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "17",
   "name": "konten",
   "column": "konto_id",
   "label": "Kode",
   "gridlabel": "",
   "seq": "2",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "*",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "18",
   "name": "konten",
   "column": "default_gegenkonto_aus",
   "label": "Default Gegenkonto-Aus",
   "gridlabel": "",
   "seq": "8",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "20",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "19",
   "name": "konten",
   "column": "default_gegenkonto_ein",
   "label": "Default Gegenkonto-Ein",
   "gridlabel": "",
   "seq": "7",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "20",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "20",
   "name": "konten_buchungs_algo",
   "column": "id",
   "label": "",
   "gridlabel": "",
   "seq": "2",
   "nogrid": "",
   "noform": "*",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "*",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "21",
   "name": "konten_buchungs_algo",
   "column": "konto_id",
   "label": "Konto",
   "gridlabel": "",
   "seq": "3",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "konten",
   "to_column": "konto_id",
   "related": "konto_name",
   "to_form": "konten",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "22",
   "name": "konten_buchungs_algo",
   "column": "Suchtext_0",
   "label": "Suchtext 1",
   "gridlabel": "",
   "seq": "9",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "50",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "23",
   "name": "konten_buchungs_algo",
   "column": "comment",
   "label": "Comment",
   "gridlabel": "",
   "seq": "6",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "200",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "24",
   "name": "konten_buchungs_algo",
   "column": "/f",
   "label": "-",
   "gridlabel": "",
   "seq": "8",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "25",
   "name": "konten_buchungs_algo",
   "column": "suchfelder_0",
   "label": "Suchfelder 1",
   "gridlabel": "",
   "seq": "10",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "radio",
   "pic": "Alle;Buchungstext;Verwendungszwech;An wen/Von wem",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "26",
   "name": "konten_buchungs_algo",
   "column": "/f",
   "label": "-",
   "gridlabel": "",
   "seq": "13",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "27",
   "name": "konten_buchungs_algo",
   "column": "Suchtext_1",
   "label": "Suchtext 2",
   "gridlabel": "",
   "seq": "14",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "50",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "28",
   "name": "konten_buchungs_algo",
   "column": "suchfelder_1",
   "label": "Suchfelder",
   "gridlabel": "Suchfelder 2",
   "seq": "15",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "radio",
   "pic": "Alle;Buchungstext;Verwendungszwech;An wen/Von wem",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "29",
   "name": "konten_buchungs_algo",
   "column": "/",
   "label": "",
   "gridlabel": "",
   "seq": "16",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "30",
   "name": "konten_buchungs_algo",
   "column": "",
   "label": "oder",
   "gridlabel": "",
   "seq": "12",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "label",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "31",
   "name": "konten_buchungs_algo",
   "column": "gegenkonto",
   "label": "Gegen konto",
   "gridlabel": "",
   "seq": "5",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "20",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "32",
   "name": "konten_buchungs_algo",
   "column": "/",
   "label": "",
   "gridlabel": "",
   "seq": "11",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "33",
   "name": "konten_buchungs_algo",
   "column": "/",
   "label": "",
   "gridlabel": "",
   "seq": "4",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "34",
   "name": "konten_buchungs_algo",
   "column": "\\h",
   "label": "",
   "gridlabel": "",
   "seq": "1",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "35",
   "name": "konten_buchungs_algo",
   "column": "/",
   "label": "",
   "gridlabel": "",
   "seq": "7",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "0",
   "datadec": "0",
   "migrate": "",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "36",
   "name": "plattformen",
   "column": "pl",
   "label": "Kode",
   "gridlabel": "",
   "seq": "0",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "*",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227210237",
   "q2_mode": "u"
  },
  {
   "id": "37",
   "name": "plattformen",
   "column": "name",
   "label": "Name",
   "gridlabel": "",
   "seq": "1",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "250",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227205851",
   "q2_mode": "i"
  },
  {
   "id": "38",
   "name": "plattformen",
   "column": "algo",
   "label": "Laden Algorithmus",
   "gridlabel": "",
   "seq": "2",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "radio",
   "pic": "Amazon;eBay;Etsy;Shopify;Easybill;Plenty",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240304195821",
   "q2_mode": "u"
  },
  {
   "id": "43",
   "name": "sales",
   "column": "id",
   "label": "",
   "gridlabel": "",
   "seq": "0",
   "nogrid": "*",
   "noform": "*",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "*",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240228163142",
   "q2_mode": "u"
  },
  {
   "id": "44",
   "name": "sales",
   "column": "shop_id",
   "label": "Laden",
   "gridlabel": "",
   "seq": "1",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "shops",
   "to_column": "shop_id",
   "related": "name",
   "to_form": "shops",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240228150416",
   "q2_mode": "u"
  },
  {
   "id": "45",
   "name": "sales",
   "column": "date",
   "label": "Datum",
   "gridlabel": "",
   "seq": "2",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "date",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240228003143",
   "q2_mode": "i"
  },
  {
   "id": "46",
   "name": "sales",
   "column": "betrag",
   "label": "Brutto",
   "gridlabel": "",
   "seq": "3",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "decimal",
   "datalen": "15",
   "datadec": "2",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240304185252",
   "q2_mode": "u"
  },
  {
   "id": "47",
   "name": "sales",
   "column": "kosten",
   "label": "Kosten",
   "gridlabel": "",
   "seq": "4",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "decimal",
   "datalen": "15",
   "datadec": "2",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240304185246",
   "q2_mode": "u"
  },
  {
   "id": "48",
   "name": "sales",
   "column": "content1",
   "label": "Content 1",
   "gridlabel": "",
   "seq": "7",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "250",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240228005351",
   "q2_mode": "u"
  },
  {
   "id": "49",
   "name": "sales",
   "column": "mwst",
   "label": "MwSt",
   "gridlabel": "",
   "seq": "5",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "decimal",
   "datalen": "15",
   "datadec": "2",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240304185239",
   "q2_mode": "u"
  },
  {
   "id": "50",
   "name": "sales",
   "column": "land",
   "label": "Land",
   "gridlabel": "",
   "seq": "6",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "3",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240228005351",
   "q2_mode": "u"
  },
  {
   "id": "53",
   "name": "sales",
   "column": "rechnung",
   "label": "R-Nummer",
   "gridlabel": "",
   "seq": "8",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "50",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240304200347",
   "q2_mode": "i"
  },
  {
   "id": "39",
   "name": "shops",
   "column": "shop_id",
   "label": "Kode",
   "gridlabel": "",
   "seq": "1",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "*",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240227213113",
   "q2_mode": "u"
  },
  {
   "id": "40",
   "name": "shops",
   "column": "pl",
   "label": "Plattform",
   "gridlabel": "",
   "seq": "2",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "int",
   "datalen": "0",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "plattformen",
   "to_column": "pl",
   "related": "name",
   "to_form": "plattformen",
   "comment": "",
   "code_when": "mem.heap.lapl=mem.s.pl",
   "code_show": "",
   "code_valid": "if mem.heap.lapl != mem.s.pl:\r\n    mem.s.name = get(\"plattformen\", f\"pl={mem.s.pl}\", \"name\")",
   "q2_time": "20240228174118",
   "q2_mode": "u"
  },
  {
   "id": "41",
   "name": "shops",
   "column": "name",
   "label": "Name",
   "gridlabel": "",
   "seq": "3",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "250",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "if mem.s.name == \"\":\r\n    mem.s.name = get(\"plattformen\", f\"pl={mem.s.pl}\", \"name\")",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240304140214",
   "q2_mode": "u"
  },
  {
   "id": "42",
   "name": "shops",
   "column": "buchung_konto",
   "label": "Buchungskonto",
   "gridlabel": "",
   "seq": "4",
   "nogrid": "",
   "noform": "",
   "check": "",
   "disabled": "",
   "readonly": "",
   "stretch": "0",
   "tag": "",
   "control": "line",
   "pic": "",
   "datatype": "char",
   "datalen": "20",
   "datadec": "0",
   "migrate": "*",
   "pk": "",
   "ai": "",
   "to_table": "",
   "to_column": "",
   "related": "",
   "to_form": "",
   "comment": "",
   "code_when": "",
   "code_show": "",
   "code_valid": "",
   "q2_time": "20240228003035",
   "q2_mode": "u"
  }
 ],
 "queries": [
  {
   "name": "day_stand",
   "content": "{\n  \"queries\": {\n    \"new_query\": \"SELECT date, \\r\\n        summa ,\\r\\n       round(SUM(summa) OVER (order BY date, id),2) AS cumulative_sum\\r\\nFROM bank\\r\\nORDER BY date;\",\n    \"month\": \"SELECT \\r\\n    substr(date,1,4) AS year\\r\\n    , substr(date,6,2) AS month\\r\\n    , round(SUM(case when summa<0 then summa else 0 end),2) AS summa_minus\\r\\nFROM bank\\r\\nwhere kr <> 25\\r\\nGROUP BY year, month\\r\\n\",\n    \"sales\": \"select shops.name, land, mwst\\r\\n    , sum(sales.betrag) as betrag\\r\\n    , sum(sales.kosten) as kosten\\nfrom sales, shops\\r\\nwhere sales.shop_id = shops.shop_id\\r\\ngroup by shops.shop_id, land, mwst\"\n  },\n  \"params\": {}\n}",
   "comment": "",
   "q2_time": "20240228171101",
   "q2_mode": "u"
  }
 ],
 "actions": [
  {
   "id": "1",
   "name": "bank",
   "action_text": "",
   "seq": "0",
   "action_mode": "1",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "2",
   "name": "bank",
   "action_text": "Gegenkonto festlegen",
   "seq": "1",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "F4",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "import set_gegenkonto\r\nset_gegenkonto()\r\nmem.refresh()",
   "comment": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "3",
   "name": "bank",
   "action_text": "Total",
   "seq": "2",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "\u2211",
   "action_key": "F2",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "selected_rows = mem.get_grid_selected_rows()\r\ntot = 0\r\nif len(selected_rows) > 1:\r\n    _range = selected_rows\r\nelse:\r\n    _range = range(mem.model.row_count())\r\n\r\n\r\nfor x in _range:\r\n    tot += num(mem.model.get_record(x)[\"betrag\"])\r\n    \r\nq2mess(tot)",
   "comment": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "4",
   "name": "bank",
   "action_text": "Tagessaldo",
   "seq": "4",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "q2cursor(\"\"\"\r\n                SELECT distinct date, \r\n                    round(SUM(betrag) OVER (ORDER BY date),2) AS cumulative_sum\r\n                FROM bank\r\n                ORDER BY date;\r\n            \"\"\").browse()",
   "comment": "",
   "q2_time": "20240227175039",
   "q2_mode": "i"
  },
  {
   "id": "5",
   "name": "bank",
   "action_text": "Payments by month",
   "seq": "5",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "q2cursor(\"\"\"SELECT \r\n    substr(date,1,4) AS year\r\n    , substr(date,6,2) AS month\r\n    , round(SUM(case when betrag>0 then betrag else 0 end),2) AS summa_plus\r\n    , round(SUM(case when betrag<0 then betrag else 0 end),2) AS summa_minus\r\nFROM bank\r\nGROUP BY year, month\"\"\").browse()",
   "comment": "",
   "q2_time": "20240228001818",
   "q2_mode": "u"
  },
  {
   "id": "6",
   "name": "banken",
   "action_text": "",
   "seq": "0",
   "action_mode": "1",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240227175040",
   "q2_mode": "i"
  },
  {
   "id": "7",
   "name": "banken",
   "action_text": "Konten",
   "seq": "1",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "konten",
   "child_where": "bk={bk}",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240227175040",
   "q2_mode": "i"
  },
  {
   "id": "8",
   "name": "konten",
   "action_text": "",
   "seq": "0",
   "action_mode": "1",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240227175040",
   "q2_mode": "i"
  },
  {
   "id": "9",
   "name": "konten",
   "action_text": "Algorithmus",
   "seq": "4",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "A",
   "action_key": "",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "konten_buchungs_algo",
   "child_where": "konto_id={konto_id}",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240227175040",
   "q2_mode": "i"
  },
  {
   "id": "10",
   "name": "konten",
   "action_text": "Import",
   "seq": "1",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "F3",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "if not hasattr(form, \"prev_form\"):\r\n    q2mess('Geh in Ref/Konto, w\u00e4hle eine Konto und mach Actions/Herunterladen!')\r\n    return\r\n\r\n# run_module(\"load_bank\", import_only=True)\r\nimport load_bank\r\nimport q2date\r\n\r\nform_loader = Q2Form(\"Import bank data \")\r\n# form_loader.add_control(\"/f\", \"Herunterladen Bank Data\")\r\n# form_loader.add_control(\"konto_id\", \"Konto\", datatype=\"int\", to_field=\"konto_id\", to_table=\"konten\", related=\"123\", to_form=\"konten\", data=1 )\r\nform_loader.add_control(\"date1\", \"From\", datatype=\"date\", data = const.date1)\r\nform_loader.add_control(\"date2\", \"to\", datatype=\"date\", data = const.date2)\r\n\r\nform_loader.ok_button =1\r\nform_loader.cancel_button =1\r\n\r\nform_loader.run()\r\n\r\nif form_loader.ok_pressed:\r\n    date1 = form_loader.s.date1\r\n    date2 = form_loader.s.date2\r\n    if Loader(date1,date2,form.r.konto_id).run():\r\n        import set_gegenkonto\r\n        set_gegenkonto()\r\n        mem.refresh()",
   "comment": "",
   "q2_time": "20240305130818",
   "q2_mode": "u"
  },
  {
   "id": "11",
   "name": "konten",
   "action_text": "Kontobewegungen",
   "seq": "3",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "bank",
   "child_where": "konto_id={konto_id}",
   "child_noshow": "",
   "child_copy_mode": "3",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240227175040",
   "q2_mode": "i"
  },
  {
   "id": "12",
   "name": "konten",
   "action_text": "Export",
   "seq": "2",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "F4",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "import q2date\r\nform_loader = Q2Form(\"Export to Agenda CSV\")\r\nform_loader.add_control(\"date1\", \"From\", datatype=\"date\", data = q2date(today()).first_day_of_month())\r\nform_loader.add_control(\"date2\", \"to\", datatype=\"date\", data = q2date(today()).last_day_of_month())\r\n\r\nform_loader.ok_button =1\r\nform_loader.cancel_button =1\r\n\r\nform_loader.run()\r\n\r\nif form_loader.ok_pressed:\r\n    date1 = form_loader.s.date1\r\n    date2 = form_loader.s.date2\r\n    \r\n    cu = q2cursor(f\"select * from bank where konto_id={mem.r.konto_id} and date>='{date1}' and date<='{date2}'\")\r\n    \r\n    from datetime import datetime\r\n    date1 = datetime.strptime(date1, \"%Y-%m-%d\").strftime(\"%d.%m.%Y\")\r\n    date2 = datetime.strptime(date2, \"%Y-%m-%d\").strftime(\"%d.%m.%Y\")\r\n    \r\n    desktop=os.path.expanduser(\"~/Desktop\")\r\n    filename = f\"{desktop}/{mem.r.konto_name} {date1}-{date2}.csv\"\r\n    filename = q2_app.get_save_file_dialoq(path=filename, filter = \"*.csv\")[0]\r\n    if filename:\r\n        import csv\r\n        fieldnames  = \"Buchungstag;Buchungstext;Beg\u00fcnstigter / Auftraggeber;Verwendungszweck;Betrag;Soll;Haben;Waehrung;Konto;Gegenkonto\".split(\";\")\r\n        with open(filename, 'w', newline='', encoding = \"utf8\") as csvfile:\r\n            writer = csv.DictWriter(csvfile, fieldnames=fieldnames, delimiter=';')\r\n            writer.writeheader()\r\n            for row in cu.records():\r\n                csv_row={}\r\n                csv_row[\"Buchungstag\"] = datetime.strptime(row[\"date\"], \"%Y-%m-%d\").strftime(\"%d.%m.%Y\")\r\n                csv_row[\"Buchungstext\"] = row[\"content1\"]\r\n                csv_row[\"Beg\u00fcnstigter / Auftraggeber\"] = row[\"content2\"]\r\n                csv_row[\"Verwendungszweck\"] = row[\"content3\"]\r\n                \r\n                if num(row[\"betrag\"]) >0:\r\n                    default_gegenkonto=mem.r.default_gegenkonto_ein\r\n                else:\r\n                    default_gegenkonto=mem.r.default_gegenkonto_aus\r\n                \r\n                row[\"betrag\"] = row[\"betrag\"].replace(\".\", \",\")\r\n                csv_row[\"Betrag\"] = row[\"betrag\"]\r\n                csv_row[\"Soll\"] = row[\"betrag\"] if num(row[\"betrag\"]) <0 else \"0\"\r\n                csv_row[\"Haben\"] = row[\"betrag\"] if num(row[\"betrag\"]) >0 else \"0\"\r\n                csv_row[\"Waehrung\"] = \"EUR\"\r\n                csv_row[\"Konto\"] = mem.r.buchung_konto\r\n                csv_row[\"Gegenkonto\"] = row[\"gegenkonto\"] if row[\"gegenkonto\"] != \"\" else default_gegenkonto\r\n                writer.writerow(csv_row)",
   "comment": "",
   "q2_time": "20240228162748",
   "q2_mode": "u"
  },
  {
   "id": "13",
   "name": "konten_buchungs_algo",
   "action_text": "",
   "seq": "0",
   "action_mode": "1",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240227175040",
   "q2_mode": "i"
  },
  {
   "id": "14",
   "name": "konten_buchungs_algo",
   "action_text": "Pr\u00fcfen",
   "seq": "1",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "F3",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "import get_such\r\nwhr_text = get_such(mem.r.id) \r\nif whr_text == \"\": \r\n    return \r\nq2cursor(f\"select date, content1, content2, content3, betrag, gegenkonto from bank where ({whr_text}) and konto_id={mem.r.konto_id}\").browse()",
   "comment": "",
   "q2_time": "20240227175040",
   "q2_mode": "i"
  },
  {
   "id": "15",
   "name": "plattformen",
   "action_text": "",
   "seq": "0",
   "action_mode": "1",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240227205851",
   "q2_mode": "i"
  },
  {
   "id": "18",
   "name": "plattformen",
   "action_text": "L\u00e4den",
   "seq": "1",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "shops",
   "child_where": "pl={pl}",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240227215039",
   "q2_mode": "i"
  },
  {
   "id": "20",
   "name": "sales",
   "action_text": "",
   "seq": "0",
   "action_mode": "1",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240228003350",
   "q2_mode": "i"
  },
  {
   "id": "23",
   "name": "sales",
   "action_text": "Total",
   "seq": "1",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "\u2211",
   "action_key": "F2",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "selected_rows = mem.get_grid_selected_rows()\r\ntot_betrag = 0\r\ntot_kosten = 0\r\nif len(selected_rows) > 1:\r\n    _range = selected_rows\r\nelse:\r\n    _range = range(mem.model.row_count())\r\n\r\n\r\nfor x in _range:\r\n    tot_betrag += num(mem.model.get_record(x)[\"betrag\"])\r\n    tot_kosten += num(mem.model.get_record(x)[\"kosten\"])\r\n    \r\nq2mess(f\"Betrag: <b>{tot_betrag}</b><br>\" \r\n               f\"Kosten: <b>{tot_kosten}</b><br>\")",
   "comment": "",
   "q2_time": "20240228110852",
   "q2_mode": "u"
  },
  {
   "id": "17",
   "name": "shops",
   "action_text": "",
   "seq": "0",
   "action_mode": "1",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240227212955",
   "q2_mode": "i"
  },
  {
   "id": "21",
   "name": "shops",
   "action_text": "Ums\u00e4tze",
   "seq": "3",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "",
   "tag": "",
   "eof_disabled": "*",
   "child_form": "sales",
   "child_where": "shop_id={shop_id}",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "",
   "comment": "",
   "q2_time": "20240228162645",
   "q2_mode": "u"
  },
  {
   "id": "22",
   "name": "shops",
   "action_text": "Import",
   "seq": "1",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "F3",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "# if not hasattr(form, \"prev_form\"):\r\n    # q2mess('Geh in Ref/Konto, w\u00e4hle eine Konto und mach Actions/Herunterladen!')\r\n    # return\r\n\r\n# run_module(\"load_bank\", import_only=True)\r\nimport load_sales\r\nimport q2date\r\n\r\nform_loader = Q2Form(\"Import sales data \")\r\n# form_loader.add_control(\"/f\", \"Herunterladen Bank Data\")\r\n# form_loader.add_control(\"konto_id\", \"Konto\", datatype=\"int\", to_field=\"konto_id\", to_table=\"konten\", related=\"123\", to_form=\"konten\", data=1 )\r\nform_loader.add_control(\"date1\", \"From\", datatype=\"date\", data = const.date1)\r\nform_loader.add_control(\"date2\", \"to\", datatype=\"date\", data = const.date2)\r\n\r\nform_loader.ok_button =1\r\nform_loader.cancel_button =1\r\n\r\nform_loader.run()\r\n\r\nif form_loader.ok_pressed:\r\n    date1 = form_loader.s.date1\r\n    date2 = form_loader.s.date2\r\n    Loader(date1,date2,form.r.shop_id)\r\n    # import set_gegenkonto\r\n    # set_gegenkonto()\r\n    mem.refresh()",
   "comment": "",
   "q2_time": "20240305133310",
   "q2_mode": "u"
  },
  {
   "id": "24",
   "name": "shops",
   "action_text": "Export",
   "seq": "2",
   "action_mode": "2",
   "action_mess": "",
   "action_icon": "",
   "action_key": "F4",
   "tag": "",
   "eof_disabled": "",
   "child_form": "",
   "child_where": "",
   "child_noshow": "",
   "child_copy_mode": "1",
   "action_worker": "import q2date\r\nform_loader = Q2Form(\"Export to Agenda CSV\")\r\nform_loader.add_control(\"date1\", \"From\", datatype=\"date\", data = q2date(today()).first_day_of_month())\r\nform_loader.add_control(\"date2\", \"to\", datatype=\"date\", data = q2date(today()).last_day_of_month())\r\n\r\nform_loader.ok_button =1\r\nform_loader.cancel_button =1\r\n\r\nform_loader.run()\r\n\r\nif form_loader.ok_pressed:\r\n    date1 = form_loader.s.date1\r\n    date2 = form_loader.s.date2\r\n    \r\n    cu = q2cursor(f\"select * from sales where shop_id={mem.r.shop_id} and date>='{date1}' and date<='{date2}'\").browse()\r\n    return\r\n    from datetime import datetime\r\n    date1 = datetime.strptime(date1, \"%Y-%m-%d\").strftime(\"%d.%m.%Y\")\r\n    date2 = datetime.strptime(date2, \"%Y-%m-%d\").strftime(\"%d.%m.%Y\")\r\n    \r\n    desktop=os.path.expanduser(\"~/Desktop\")\r\n    filename = f\"{desktop}/{mem.r.konto_name} {date1}-{date2}.csv\"\r\n    filename = q2_app.get_save_file_dialoq(path=filename, filter = \"*.csv\")[0]\r\n    if filename:\r\n        import csv\r\n        fieldnames  = \"Buchungstag;Buchungstext;Beg\u00fcnstigter / Auftraggeber;Verwendungszweck;Betrag;Soll;Haben;Waehrung;Konto;Gegenkonto\".split(\";\")\r\n        with open(filename, 'w', newline='', encoding = \"utf8\") as csvfile:\r\n            writer = csv.DictWriter(csvfile, fieldnames=fieldnames, delimiter=';')\r\n            writer.writeheader()\r\n            for row in cu.records():\r\n                csv_row={}\r\n                csv_row[\"Buchungstag\"] = datetime.strptime(row[\"date\"], \"%Y-%m-%d\").strftime(\"%d.%m.%Y\")\r\n                csv_row[\"Buchungstext\"] = row[\"content1\"]\r\n                csv_row[\"Beg\u00fcnstigter / Auftraggeber\"] = row[\"content2\"]\r\n                csv_row[\"Verwendungszweck\"] = row[\"content3\"]\r\n                \r\n                if num(row[\"betrag\"]) >0:\r\n                    default_gegenkonto=mem.r.default_gegenkonto_ein\r\n                else:\r\n                    default_gegenkonto=mem.r.default_gegenkonto_aus\r\n                \r\n                row[\"betrag\"] = row[\"betrag\"].replace(\".\", \",\")\r\n                csv_row[\"Betrag\"] = row[\"betrag\"]\r\n                csv_row[\"Soll\"] = row[\"betrag\"] if num(row[\"betrag\"]) <0 else \"0\"\r\n                csv_row[\"Haben\"] = row[\"betrag\"] if num(row[\"betrag\"]) >0 else \"0\"\r\n                csv_row[\"Waehrung\"] = \"EUR\"\r\n                csv_row[\"Konto\"] = mem.r.buchung_konto\r\n                csv_row[\"Gegenkonto\"] = row[\"gegenkonto\"] if row[\"gegenkonto\"] != \"\" else default_gegenkonto\r\n                writer.writerow(csv_row)",
   "comment": "",
   "q2_time": "20240228163111",
   "q2_mode": "u"
  }
 ],
 "reports": [],
 "packages": []
}